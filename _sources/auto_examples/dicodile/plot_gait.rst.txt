
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/dicodile/plot_gait.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_dicodile_plot_gait.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_dicodile_plot_gait.py:


====================
Gait (steps) example
====================
In this example, we use DiCoDiLe on an open dataset of gait (steps) IMU time-series to discover patterns in the data. We will then use those to attempt to detect steps and compare our findings with the ground truth.

.. GENERATED FROM PYTHON SOURCE LINES 8-12

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np








.. GENERATED FROM PYTHON SOURCE LINES 13-14

# Retrieve trial data

.. GENERATED FROM PYTHON SOURCE LINES 14-19

.. code-block:: default


    from dicodile.data.gait import get_gait_data

    trial = get_gait_data(subject=6, trial=1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Downloading data from http://dev.ipol.im/~truong/GaitData.zip (192.3 MB)

    file_sizes:   0%|                                    | 0.00/202M [00:00<?, ?B/s]    file_sizes:   0%|                            | 24.6k/202M [00:00<24:16, 138kB/s]    file_sizes:   0%|                            | 49.2k/202M [00:00<24:21, 138kB/s]    file_sizes:   0%|                             | 106k/202M [00:00<15:08, 222kB/s]    file_sizes:   0%|                             | 221k/202M [00:00<08:39, 388kB/s]    file_sizes:   0%|                             | 451k/202M [00:00<04:42, 711kB/s]    file_sizes:   0%|1                           | 909k/202M [00:01<02:29, 1.34MB/s]    file_sizes:   1%|2                          | 1.83M/202M [00:01<01:17, 2.58MB/s]    file_sizes:   2%|4                          | 3.66M/202M [00:01<00:52, 3.78MB/s]    file_sizes:   4%|9                          | 7.33M/202M [00:01<00:30, 6.38MB/s]    file_sizes:   5%|#2                         | 9.43M/202M [00:02<00:25, 7.48MB/s]    file_sizes:   5%|#3                         | 10.2M/202M [00:02<00:28, 6.81MB/s]    file_sizes:   6%|#5                         | 11.5M/202M [00:02<00:27, 6.95MB/s]    file_sizes:   6%|#7                         | 12.8M/202M [00:02<00:26, 7.07MB/s]    file_sizes:   7%|#8                         | 14.1M/202M [00:02<00:26, 7.19MB/s]    file_sizes:   8%|##1                        | 15.7M/202M [00:03<00:24, 7.59MB/s]    file_sizes:   8%|##2                        | 17.0M/202M [00:03<00:24, 7.54MB/s]    file_sizes:   9%|##4                        | 18.3M/202M [00:03<00:24, 7.54MB/s]    file_sizes:  10%|##6                        | 19.9M/202M [00:03<00:23, 7.86MB/s]    file_sizes:  11%|##8                        | 21.2M/202M [00:03<00:23, 7.78MB/s]    file_sizes:  11%|###                        | 22.8M/202M [00:03<00:22, 8.03MB/s]    file_sizes:  12%|###2                       | 24.1M/202M [00:04<00:22, 7.90MB/s]    file_sizes:  13%|###4                       | 25.7M/202M [00:04<00:21, 8.14MB/s]    file_sizes:  14%|###6                       | 27.3M/202M [00:04<00:20, 8.32MB/s]    file_sizes:  14%|###8                       | 28.6M/202M [00:04<00:21, 8.09MB/s]    file_sizes:  15%|####                       | 30.1M/202M [00:04<00:20, 8.28MB/s]    file_sizes:  16%|####2                      | 32.0M/202M [00:05<00:19, 8.79MB/s]    file_sizes:  17%|####4                      | 33.3M/202M [00:05<00:19, 8.42MB/s]    file_sizes:  17%|####7                      | 35.1M/202M [00:05<00:18, 8.87MB/s]    file_sizes:  18%|####9                      | 36.7M/202M [00:05<00:18, 8.81MB/s]    file_sizes:  19%|#####                      | 38.0M/202M [00:05<00:19, 8.37MB/s]    file_sizes:  19%|#####2                     | 39.1M/202M [00:05<00:20, 7.77MB/s]    file_sizes:  20%|#####3                     | 40.1M/202M [00:06<00:22, 7.21MB/s]    file_sizes:  21%|#####5                     | 41.4M/202M [00:06<00:22, 7.20MB/s]    file_sizes:  21%|#####6                     | 42.5M/202M [00:06<00:23, 6.82MB/s]    file_sizes:  22%|#####8                     | 43.5M/202M [00:06<00:24, 6.55MB/s]    file_sizes:  22%|######                     | 44.8M/202M [00:06<00:23, 6.75MB/s]    file_sizes:  23%|######1                    | 45.9M/202M [00:06<00:23, 6.51MB/s]    file_sizes:  23%|######3                    | 47.2M/202M [00:07<00:29, 5.23MB/s]    file_sizes:  24%|######5                    | 49.0M/202M [00:07<00:23, 6.43MB/s]    file_sizes:  25%|######7                    | 50.1M/202M [00:07<00:24, 6.24MB/s]    file_sizes:  25%|######8                    | 50.8M/202M [00:07<00:26, 5.76MB/s]    file_sizes:  26%|######9                    | 51.9M/202M [00:08<00:26, 5.70MB/s]    file_sizes:  26%|#######                    | 52.7M/202M [00:08<00:27, 5.36MB/s]    file_sizes:  27%|#######1                   | 53.5M/202M [00:08<00:29, 5.05MB/s]    file_sizes:  27%|#######2                   | 54.3M/202M [00:08<00:30, 4.87MB/s]    file_sizes:  28%|#######4                   | 55.6M/202M [00:08<00:26, 5.46MB/s]    file_sizes:  28%|#######5                   | 56.4M/202M [00:08<00:27, 5.24MB/s]    file_sizes:  28%|#######6                   | 57.1M/202M [00:09<00:28, 5.02MB/s]    file_sizes:  29%|#######7                   | 57.8M/202M [00:09<00:32, 4.48MB/s]    file_sizes:  29%|#######8                   | 58.7M/202M [00:09<00:28, 5.03MB/s]    file_sizes:  30%|#######9                   | 59.5M/202M [00:09<00:30, 4.60MB/s]    file_sizes:  30%|########                   | 60.0M/202M [00:09<00:32, 4.32MB/s]    file_sizes:  30%|########1                  | 60.9M/202M [00:10<00:32, 4.30MB/s]    file_sizes:  31%|########2                  | 61.6M/202M [00:10<00:33, 4.12MB/s]    file_sizes:  31%|########3                  | 62.3M/202M [00:10<00:34, 4.03MB/s]    file_sizes:  31%|########4                  | 62.8M/202M [00:10<00:35, 3.90MB/s]    file_sizes:  32%|########5                  | 63.7M/202M [00:10<00:42, 3.27MB/s]    file_sizes:  32%|########7                  | 65.1M/202M [00:11<00:32, 4.21MB/s]    file_sizes:  33%|########8                  | 65.8M/202M [00:11<00:40, 3.33MB/s]    file_sizes:  33%|########8                  | 66.3M/202M [00:11<00:41, 3.24MB/s]    file_sizes:  33%|########9                  | 66.8M/202M [00:11<00:41, 3.25MB/s]    file_sizes:  33%|#########                  | 67.5M/202M [00:11<00:41, 3.25MB/s]    file_sizes:  34%|#########1                 | 68.0M/202M [00:12<00:42, 3.18MB/s]    file_sizes:  34%|#########1                 | 68.5M/202M [00:12<00:42, 3.12MB/s]    file_sizes:  34%|#########2                 | 69.1M/202M [00:12<00:41, 3.16MB/s]    file_sizes:  35%|#########3                 | 69.7M/202M [00:12<00:41, 3.20MB/s]    file_sizes:  35%|#########4                 | 70.2M/202M [00:12<00:41, 3.14MB/s]    file_sizes:  35%|#########4                 | 70.8M/202M [00:12<00:38, 3.43MB/s]    file_sizes:  35%|#########5                 | 71.4M/202M [00:13<00:41, 3.16MB/s]    file_sizes:  36%|#########6                 | 72.0M/202M [00:13<00:37, 3.44MB/s]    file_sizes:  36%|#########7                 | 72.6M/202M [00:13<00:40, 3.17MB/s]    file_sizes:  36%|#########8                 | 73.4M/202M [00:13<00:36, 3.47MB/s]    file_sizes:  37%|#########8                 | 73.8M/202M [00:13<00:40, 3.16MB/s]    file_sizes:  37%|#########9                 | 74.4M/202M [00:14<00:38, 3.30MB/s]    file_sizes:  37%|##########                 | 75.0M/202M [00:14<00:37, 3.35MB/s]    file_sizes:  38%|##########1                | 75.6M/202M [00:14<00:38, 3.30MB/s]    file_sizes:  38%|##########2                | 76.4M/202M [00:14<00:35, 3.57MB/s]    file_sizes:  38%|##########2                | 76.8M/202M [00:14<00:37, 3.33MB/s]    file_sizes:  38%|##########3                | 77.5M/202M [00:15<00:37, 3.32MB/s]    file_sizes:  39%|##########4                | 78.2M/202M [00:15<00:34, 3.59MB/s]    file_sizes:  39%|##########5                | 78.6M/202M [00:15<00:36, 3.35MB/s]    file_sizes:  39%|##########6                | 79.3M/202M [00:15<00:36, 3.33MB/s]    file_sizes:  40%|##########7                | 79.9M/202M [00:15<00:35, 3.42MB/s]    file_sizes:  40%|##########7                | 80.6M/202M [00:15<00:34, 3.48MB/s]    file_sizes:  40%|##########8                | 81.1M/202M [00:16<00:36, 3.35MB/s]    file_sizes:  41%|##########9                | 81.8M/202M [00:16<00:34, 3.43MB/s]    file_sizes:  41%|###########                | 82.4M/202M [00:16<00:34, 3.49MB/s]    file_sizes:  41%|###########1               | 83.1M/202M [00:16<00:33, 3.54MB/s]    file_sizes:  41%|###########1               | 83.6M/202M [00:16<00:34, 3.38MB/s]    file_sizes:  42%|###########2               | 84.3M/202M [00:16<00:33, 3.45MB/s]    file_sizes:  42%|###########3               | 84.8M/202M [00:17<00:35, 3.34MB/s]    file_sizes:  42%|###########4               | 85.5M/202M [00:17<00:33, 3.42MB/s]    file_sizes:  43%|###########5               | 86.0M/202M [00:17<00:33, 3.44MB/s]    file_sizes:  43%|###########5               | 86.6M/202M [00:17<00:34, 3.36MB/s]    file_sizes:  43%|###########6               | 87.3M/202M [00:17<00:33, 3.45MB/s]    file_sizes:  44%|###########7               | 87.9M/202M [00:18<00:32, 3.49MB/s]    file_sizes:  44%|###########8               | 88.6M/202M [00:18<00:41, 2.75MB/s]    file_sizes:  44%|###########9               | 89.5M/202M [00:18<00:33, 3.34MB/s]    file_sizes:  45%|############               | 90.0M/202M [00:18<00:34, 3.21MB/s]    file_sizes:  45%|############1              | 90.4M/202M [00:18<00:37, 2.96MB/s]    file_sizes:  45%|############1              | 90.9M/202M [00:19<00:38, 2.85MB/s]    file_sizes:  45%|############2              | 91.5M/202M [00:19<00:37, 2.95MB/s]    file_sizes:  46%|############3              | 91.9M/202M [00:19<00:39, 2.76MB/s]    file_sizes:  46%|############3              | 92.4M/202M [00:19<00:38, 2.81MB/s]    file_sizes:  46%|############4              | 93.1M/202M [00:19<00:35, 3.03MB/s]    file_sizes:  46%|############5              | 93.4M/202M [00:20<00:38, 2.81MB/s]    file_sizes:  47%|############5              | 94.1M/202M [00:20<00:35, 3.05MB/s]    file_sizes:  47%|############6              | 94.5M/202M [00:20<00:37, 2.83MB/s]    file_sizes:  47%|############7              | 95.0M/202M [00:20<00:37, 2.87MB/s]    file_sizes:  47%|############8              | 95.7M/202M [00:20<00:34, 3.08MB/s]    file_sizes:  48%|############8              | 96.1M/202M [00:20<00:35, 2.98MB/s]    file_sizes:  48%|############9              | 96.9M/202M [00:21<00:32, 3.23MB/s]    file_sizes:  48%|#############              | 97.2M/202M [00:21<00:35, 2.97MB/s]    file_sizes:  49%|#############1             | 97.9M/202M [00:21<00:32, 3.16MB/s]    file_sizes:  49%|#############1             | 98.6M/202M [00:21<00:31, 3.30MB/s]    file_sizes:  49%|#############2             | 99.0M/202M [00:21<00:30, 3.36MB/s]    file_sizes:  49%|#############3             | 99.7M/202M [00:21<00:30, 3.29MB/s]    file_sizes:  50%|#############9              | 100M/202M [00:22<00:30, 3.35MB/s]    file_sizes:  50%|##############              | 101M/202M [00:22<00:30, 3.29MB/s]    file_sizes:  50%|##############1             | 102M/202M [00:22<00:29, 3.39MB/s]    file_sizes:  51%|##############1             | 102M/202M [00:22<00:31, 3.20MB/s]    file_sizes:  51%|##############2             | 103M/202M [00:22<00:29, 3.40MB/s]    file_sizes:  51%|##############3             | 103M/202M [00:22<00:28, 3.44MB/s]    file_sizes:  51%|##############4             | 104M/202M [00:23<00:30, 3.25MB/s]    file_sizes:  52%|##############5             | 105M/202M [00:23<00:28, 3.46MB/s]    file_sizes:  52%|##############5             | 105M/202M [00:23<00:27, 3.48MB/s]    file_sizes:  52%|##############6             | 106M/202M [00:23<00:29, 3.28MB/s]    file_sizes:  53%|##############7             | 106M/202M [00:23<00:28, 3.30MB/s]    file_sizes:  53%|##############8             | 107M/202M [00:24<00:26, 3.56MB/s]    file_sizes:  53%|##############9             | 107M/202M [00:24<00:28, 3.36MB/s]    file_sizes:  54%|###############             | 108M/202M [00:24<00:28, 3.33MB/s]    file_sizes:  54%|###############1            | 109M/202M [00:24<00:27, 3.41MB/s]    file_sizes:  54%|###############1            | 109M/202M [00:24<00:26, 3.48MB/s]    file_sizes:  55%|###############2            | 110M/202M [00:25<00:25, 3.53MB/s]    file_sizes:  55%|###############3            | 111M/202M [00:25<00:25, 3.56MB/s]    file_sizes:  55%|###############4            | 111M/202M [00:25<00:25, 3.57MB/s]    file_sizes:  55%|###############5            | 112M/202M [00:25<00:26, 3.36MB/s]    file_sizes:  56%|###############6            | 113M/202M [00:25<00:25, 3.51MB/s]    file_sizes:  56%|###############6            | 113M/202M [00:25<00:25, 3.52MB/s]    file_sizes:  56%|###############7            | 114M/202M [00:26<00:26, 3.35MB/s]    file_sizes:  57%|###############8            | 114M/202M [00:26<00:25, 3.49MB/s]    file_sizes:  57%|###############9            | 115M/202M [00:26<00:24, 3.53MB/s]    file_sizes:  57%|################            | 115M/202M [00:26<00:24, 3.54MB/s]    file_sizes:  58%|################1           | 116M/202M [00:26<00:26, 3.23MB/s]    file_sizes:  58%|################2           | 117M/202M [00:26<00:23, 3.54MB/s]    file_sizes:  58%|################2           | 117M/202M [00:27<00:23, 3.54MB/s]    file_sizes:  58%|################3           | 118M/202M [00:27<00:25, 3.34MB/s]    file_sizes:  59%|################4           | 119M/202M [00:27<00:24, 3.32MB/s]    file_sizes:  59%|################5           | 119M/202M [00:27<00:24, 3.42MB/s]    file_sizes:  59%|################6           | 120M/202M [00:27<00:23, 3.49MB/s]    file_sizes:  60%|################7           | 121M/202M [00:28<00:22, 3.53MB/s]    file_sizes:  60%|################8           | 121M/202M [00:28<00:22, 3.57MB/s]    file_sizes:  60%|################9           | 122M/202M [00:28<00:22, 3.59MB/s]    file_sizes:  61%|#################           | 123M/202M [00:28<00:21, 3.61MB/s]    file_sizes:  61%|#################           | 123M/202M [00:28<00:21, 3.61MB/s]    file_sizes:  61%|#################1          | 124M/202M [00:28<00:21, 3.63MB/s]    file_sizes:  62%|#################2          | 124M/202M [00:29<00:21, 3.63MB/s]    file_sizes:  62%|#################3          | 125M/202M [00:29<00:21, 3.64MB/s]    file_sizes:  62%|#################4          | 126M/202M [00:29<00:22, 3.43MB/s]    file_sizes:  63%|#################5          | 126M/202M [00:29<00:21, 3.50MB/s]    file_sizes:  63%|#################6          | 127M/202M [00:29<00:19, 3.79MB/s]    file_sizes:  63%|#################7          | 128M/202M [00:29<00:19, 3.76MB/s]    file_sizes:  64%|#################7          | 128M/202M [00:30<00:19, 3.74MB/s]    file_sizes:  64%|#################9          | 129M/202M [00:30<00:20, 3.57MB/s]    file_sizes:  64%|#################9          | 130M/202M [00:30<00:20, 3.60MB/s]    file_sizes:  65%|##################          | 130M/202M [00:30<00:18, 3.96MB/s]    file_sizes:  65%|##################1         | 131M/202M [00:30<00:17, 3.93MB/s]    file_sizes:  65%|##################2         | 132M/202M [00:31<00:18, 3.78MB/s]    file_sizes:  66%|##################3         | 132M/202M [00:31<00:17, 4.05MB/s]    file_sizes:  66%|##################4         | 133M/202M [00:31<00:17, 3.88MB/s]    file_sizes:  66%|##################5         | 134M/202M [00:31<00:16, 4.11MB/s]    file_sizes:  67%|##################6         | 135M/202M [00:31<00:15, 4.19MB/s]    file_sizes:  67%|##################7         | 135M/202M [00:31<00:15, 4.25MB/s]    file_sizes:  68%|##################9         | 136M/202M [00:32<00:15, 4.29MB/s]    file_sizes:  68%|###################         | 137M/202M [00:32<00:14, 4.33MB/s]    file_sizes:  68%|###################1        | 138M/202M [00:32<00:14, 4.37MB/s]    file_sizes:  69%|###################2        | 139M/202M [00:32<00:14, 4.41MB/s]    file_sizes:  69%|###################3        | 139M/202M [00:32<00:17, 3.54MB/s]    file_sizes:  70%|###################5        | 141M/202M [00:33<00:13, 4.65MB/s]    file_sizes:  70%|###################6        | 141M/202M [00:33<00:13, 4.37MB/s]    file_sizes:  70%|###################6        | 142M/202M [00:33<00:15, 3.99MB/s]    file_sizes:  71%|###################7        | 142M/202M [00:33<00:16, 3.71MB/s]    file_sizes:  71%|###################8        | 143M/202M [00:33<00:15, 3.70MB/s]    file_sizes:  71%|###################9        | 143M/202M [00:33<00:16, 3.58MB/s]    file_sizes:  71%|####################        | 144M/202M [00:34<00:15, 3.61MB/s]    file_sizes:  72%|####################        | 145M/202M [00:34<00:15, 3.64MB/s]    file_sizes:  72%|####################1       | 145M/202M [00:34<00:13, 4.02MB/s]    file_sizes:  72%|####################2       | 146M/202M [00:34<00:15, 3.54MB/s]    file_sizes:  73%|####################3       | 147M/202M [00:34<00:14, 3.77MB/s]    file_sizes:  73%|####################4       | 147M/202M [00:34<00:15, 3.49MB/s]    file_sizes:  73%|####################4       | 148M/202M [00:35<00:16, 3.28MB/s]    file_sizes:  73%|####################5       | 148M/202M [00:35<00:17, 3.00MB/s]    file_sizes:  74%|####################6       | 148M/202M [00:35<00:21, 2.49MB/s]    file_sizes:  74%|####################7       | 149M/202M [00:35<00:16, 3.16MB/s]    file_sizes:  74%|####################7       | 150M/202M [00:35<00:19, 2.72MB/s]    file_sizes:  74%|####################8       | 150M/202M [00:36<00:21, 2.44MB/s]    file_sizes:  75%|####################9       | 151M/202M [00:36<00:20, 2.52MB/s]    file_sizes:  75%|####################9       | 151M/202M [00:36<00:20, 2.53MB/s]    file_sizes:  75%|####################9       | 151M/202M [00:36<00:22, 2.28MB/s]    file_sizes:  75%|#####################       | 151M/202M [00:36<00:22, 2.26MB/s]    file_sizes:  75%|#####################       | 152M/202M [00:36<00:21, 2.27MB/s]    file_sizes:  75%|#####################1      | 152M/202M [00:37<00:20, 2.43MB/s]    file_sizes:  76%|#####################1      | 152M/202M [00:37<00:19, 2.48MB/s]    file_sizes:  76%|#####################2      | 153M/202M [00:37<00:22, 2.21MB/s]    file_sizes:  76%|#####################2      | 153M/202M [00:37<00:21, 2.25MB/s]    file_sizes:  76%|#####################3      | 154M/202M [00:37<00:21, 2.22MB/s]    file_sizes:  76%|#####################3      | 154M/202M [00:37<00:20, 2.32MB/s]    file_sizes:  77%|#####################4      | 154M/202M [00:37<00:19, 2.44MB/s]    file_sizes:  77%|#####################5      | 155M/202M [00:38<00:20, 2.34MB/s]    file_sizes:  77%|#####################5      | 155M/202M [00:38<00:19, 2.40MB/s]    file_sizes:  77%|#####################6      | 156M/202M [00:38<00:18, 2.50MB/s]    file_sizes:  77%|#####################6      | 156M/202M [00:38<00:18, 2.43MB/s]    file_sizes:  78%|#####################7      | 157M/202M [00:38<00:17, 2.56MB/s]    file_sizes:  78%|#####################8      | 157M/202M [00:39<00:18, 2.42MB/s]    file_sizes:  78%|#####################8      | 158M/202M [00:39<00:17, 2.46MB/s]    file_sizes:  78%|#####################9      | 158M/202M [00:39<00:17, 2.49MB/s]    file_sizes:  79%|#####################9      | 158M/202M [00:39<00:16, 2.57MB/s]    file_sizes:  79%|######################      | 159M/202M [00:39<00:17, 2.48MB/s]    file_sizes:  79%|######################1     | 159M/202M [00:39<00:16, 2.60MB/s]    file_sizes:  79%|######################2     | 160M/202M [00:40<00:15, 2.62MB/s]    file_sizes:  79%|######################2     | 160M/202M [00:40<00:16, 2.51MB/s]    file_sizes:  80%|######################3     | 161M/202M [00:40<00:16, 2.44MB/s]    file_sizes:  80%|######################3     | 161M/202M [00:40<00:16, 2.47MB/s]    file_sizes:  80%|######################4     | 162M/202M [00:40<00:16, 2.50MB/s]    file_sizes:  80%|######################4     | 162M/202M [00:40<00:15, 2.58MB/s]    file_sizes:  81%|######################5     | 162M/202M [00:41<00:19, 2.02MB/s]    file_sizes:  81%|######################6     | 163M/202M [00:41<00:15, 2.41MB/s]    file_sizes:  81%|######################7     | 164M/202M [00:41<00:16, 2.28MB/s]    file_sizes:  81%|######################7     | 164M/202M [00:41<00:16, 2.27MB/s]    file_sizes:  81%|######################8     | 164M/202M [00:42<00:18, 2.06MB/s]    file_sizes:  82%|######################8     | 165M/202M [00:42<00:17, 2.06MB/s]    file_sizes:  82%|######################9     | 165M/202M [00:42<00:17, 2.08MB/s]    file_sizes:  82%|######################9     | 165M/202M [00:42<00:16, 2.16MB/s]    file_sizes:  82%|######################9     | 166M/202M [00:42<00:16, 2.24MB/s]    file_sizes:  82%|#######################     | 166M/202M [00:42<00:15, 2.31MB/s]    file_sizes:  82%|#######################     | 166M/202M [00:43<00:16, 2.11MB/s]    file_sizes:  83%|#######################1    | 166M/202M [00:43<00:17, 2.00MB/s]    file_sizes:  83%|#######################1    | 167M/202M [00:43<00:15, 2.22MB/s]    file_sizes:  83%|#######################2    | 167M/202M [00:43<00:15, 2.23MB/s]    file_sizes:  83%|#######################2    | 168M/202M [00:43<00:15, 2.23MB/s]    file_sizes:  83%|#######################3    | 168M/202M [00:43<00:14, 2.36MB/s]    file_sizes:  83%|#######################3    | 168M/202M [00:43<00:13, 2.45MB/s]    file_sizes:  84%|#######################4    | 169M/202M [00:44<00:15, 2.18MB/s]    file_sizes:  84%|#######################4    | 169M/202M [00:44<00:14, 2.19MB/s]    file_sizes:  84%|#######################5    | 169M/202M [00:44<00:13, 2.38MB/s]    file_sizes:  84%|#######################5    | 170M/202M [00:44<00:12, 2.53MB/s]    file_sizes:  84%|#######################6    | 170M/202M [00:44<00:12, 2.53MB/s]    file_sizes:  84%|#######################6    | 170M/202M [00:44<00:14, 2.22MB/s]    file_sizes:  85%|#######################7    | 171M/202M [00:44<00:13, 2.32MB/s]    file_sizes:  85%|#######################7    | 171M/202M [00:45<00:12, 2.51MB/s]    file_sizes:  85%|#######################8    | 171M/202M [00:45<00:11, 2.58MB/s]    file_sizes:  85%|#######################8    | 172M/202M [00:45<00:11, 2.61MB/s]    file_sizes:  85%|#######################9    | 172M/202M [00:45<00:11, 2.50MB/s]    file_sizes:  86%|#######################9    | 172M/202M [00:45<00:12, 2.29MB/s]    file_sizes:  86%|########################    | 173M/202M [00:45<00:11, 2.49MB/s]    file_sizes:  86%|########################    | 173M/202M [00:45<00:10, 2.60MB/s]    file_sizes:  86%|########################1   | 174M/202M [00:46<00:10, 2.59MB/s]    file_sizes:  86%|########################1   | 174M/202M [00:46<00:12, 2.25MB/s]    file_sizes:  86%|########################2   | 174M/202M [00:46<00:11, 2.36MB/s]    file_sizes:  87%|########################2   | 175M/202M [00:46<00:10, 2.53MB/s]    file_sizes:  87%|########################3   | 175M/202M [00:46<00:10, 2.47MB/s]    file_sizes:  87%|########################3   | 176M/202M [00:46<00:10, 2.58MB/s]    file_sizes:  87%|########################4   | 176M/202M [00:47<00:09, 2.67MB/s]    file_sizes:  87%|########################4   | 176M/202M [00:47<00:09, 2.76MB/s]    file_sizes:  88%|########################5   | 177M/202M [00:47<00:09, 2.58MB/s]    file_sizes:  88%|########################5   | 177M/202M [00:47<00:10, 2.38MB/s]    file_sizes:  88%|########################6   | 177M/202M [00:47<00:10, 2.34MB/s]    file_sizes:  88%|########################6   | 178M/202M [00:47<00:09, 2.42MB/s]    file_sizes:  88%|########################7   | 178M/202M [00:47<00:09, 2.47MB/s]    file_sizes:  89%|########################8   | 179M/202M [00:48<00:09, 2.48MB/s]    file_sizes:  89%|########################8   | 179M/202M [00:48<00:08, 2.56MB/s]    file_sizes:  89%|########################9   | 180M/202M [00:48<00:08, 2.69MB/s]    file_sizes:  89%|########################9   | 180M/202M [00:48<00:07, 2.77MB/s]    file_sizes:  89%|#########################   | 180M/202M [00:48<00:08, 2.61MB/s]    file_sizes:  90%|#########################   | 181M/202M [00:48<00:08, 2.38MB/s]    file_sizes:  90%|#########################1  | 181M/202M [00:49<00:08, 2.36MB/s]    file_sizes:  90%|#########################1  | 181M/202M [00:49<00:08, 2.43MB/s]    file_sizes:  90%|#########################2  | 182M/202M [00:49<00:07, 2.47MB/s]    file_sizes:  90%|#########################3  | 182M/202M [00:49<00:07, 2.50MB/s]    file_sizes:  91%|#########################3  | 183M/202M [00:49<00:07, 2.51MB/s]    file_sizes:  91%|#########################4  | 183M/202M [00:49<00:07, 2.53MB/s]    file_sizes:  91%|#########################5  | 184M/202M [00:50<00:06, 2.56MB/s]    file_sizes:  91%|#########################5  | 184M/202M [00:50<00:06, 2.55MB/s]    file_sizes:  92%|#########################6  | 185M/202M [00:50<00:06, 2.57MB/s]    file_sizes:  92%|#########################7  | 185M/202M [00:50<00:06, 2.57MB/s]    file_sizes:  92%|#########################7  | 186M/202M [00:50<00:06, 2.57MB/s]    file_sizes:  92%|#########################8  | 186M/202M [00:50<00:05, 2.73MB/s]    file_sizes:  92%|#########################8  | 186M/202M [00:51<00:05, 2.80MB/s]    file_sizes:  93%|#########################9  | 187M/202M [00:51<00:05, 2.89MB/s]    file_sizes:  93%|#########################9  | 187M/202M [00:51<00:05, 2.67MB/s]    file_sizes:  93%|##########################  | 188M/202M [00:51<00:05, 2.45MB/s]    file_sizes:  93%|##########################  | 188M/202M [00:51<00:05, 2.67MB/s]    file_sizes:  93%|##########################1 | 188M/202M [00:51<00:05, 2.59MB/s]    file_sizes:  94%|##########################2 | 189M/202M [00:52<00:04, 2.76MB/s]    file_sizes:  94%|##########################3 | 189M/202M [00:52<00:04, 2.81MB/s]    file_sizes:  94%|##########################3 | 190M/202M [00:52<00:04, 2.69MB/s]    file_sizes:  94%|##########################4 | 190M/202M [00:52<00:03, 2.86MB/s]    file_sizes:  95%|##########################5 | 191M/202M [00:52<00:03, 2.88MB/s]    file_sizes:  95%|##########################5 | 191M/202M [00:52<00:03, 2.90MB/s]    file_sizes:  95%|##########################6 | 192M/202M [00:53<00:03, 2.92MB/s]    file_sizes:  95%|##########################7 | 193M/202M [00:53<00:02, 3.14MB/s]    file_sizes:  96%|##########################7 | 193M/202M [00:53<00:02, 3.13MB/s]    file_sizes:  96%|##########################8 | 193M/202M [00:53<00:02, 2.90MB/s]    file_sizes:  96%|##########################8 | 194M/202M [00:53<00:02, 3.07MB/s]    file_sizes:  96%|##########################9 | 194M/202M [00:53<00:02, 3.30MB/s]    file_sizes:  97%|########################### | 195M/202M [00:54<00:02, 2.82MB/s]    file_sizes:  97%|###########################1| 195M/202M [00:54<00:02, 2.84MB/s]    file_sizes:  97%|###########################1| 196M/202M [00:54<00:02, 2.73MB/s]    file_sizes:  97%|###########################2| 196M/202M [00:54<00:02, 2.61MB/s]    file_sizes:  98%|###########################3| 197M/202M [00:54<00:01, 2.60MB/s]    file_sizes:  98%|###########################3| 197M/202M [00:54<00:01, 2.65MB/s]    file_sizes:  98%|###########################4| 197M/202M [00:55<00:01, 2.75MB/s]    file_sizes:  98%|###########################4| 198M/202M [00:55<00:01, 2.83MB/s]    file_sizes:  98%|###########################5| 198M/202M [00:55<00:01, 2.66MB/s]    file_sizes:  99%|###########################5| 199M/202M [00:55<00:01, 2.55MB/s]    file_sizes:  99%|###########################6| 199M/202M [00:55<00:00, 2.74MB/s]    file_sizes:  99%|###########################7| 200M/202M [00:55<00:00, 2.64MB/s]    file_sizes:  99%|###########################7| 200M/202M [00:55<00:00, 2.83MB/s]    file_sizes:  99%|###########################8| 201M/202M [00:56<00:00, 2.87MB/s]    file_sizes: 100%|###########################9| 201M/202M [00:56<00:00, 2.89MB/s]    file_sizes: 100%|###########################9| 202M/202M [00:56<00:00, 3.07MB/s]    file_sizes: 100%|############################| 202M/202M [00:56<00:00, 3.57MB/s]
    Successfully downloaded file to /github/home/data/dicodile/gait/GaitData.zip




.. GENERATED FROM PYTHON SOURCE LINES 20-21

Let’s have a look at the data for one trial.

.. GENERATED FROM PYTHON SOURCE LINES 21-24

.. code-block:: default


    trial.keys()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    dict_keys(['Subject', 'Trial', 'Code', 'Age', 'Gender', 'Height', 'Weight', 'BMI', 'Laterality', 'Sensor', 'WalkedDistance', 'WalkingSpeed', 'PathologyGroup', 'IsControl', 'LeftFootActivity', 'RightFootActivity', 'data'])



.. GENERATED FROM PYTHON SOURCE LINES 25-28

We get a dictionary whose keys are metadata items, plus a ‘data’ key that
contains a numpy array with the trial time series for each sensor axis, at
100 Hz resolution.

.. GENERATED FROM PYTHON SOURCE LINES 28-32

.. code-block:: default


    # right foot acceleration (vertical)
    plt.plot(trial['data']['RAV'])




.. image-sg:: /auto_examples/dicodile/images/sphx_glr_plot_gait_001.png
   :alt: plot gait
   :srcset: /auto_examples/dicodile/images/sphx_glr_plot_gait_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [<matplotlib.lines.Line2D object at 0x7f70204c86a0>]



.. GENERATED FROM PYTHON SOURCE LINES 33-35

Let’s look at a small portion of the series for both feet, overlaid on the
same plot.

.. GENERATED FROM PYTHON SOURCE LINES 35-45

.. code-block:: default


    fig, ax = plt.subplots()
    ax.plot(trial['data']['LAV'][5000:5800],
            label='left foot vertical acceleration')
    ax.plot(trial['data']['RAV'][5000:5800],
            label='right foot vertical acceleration')
    ax.set_xlabel('time (x10ms)')
    ax.set_ylabel('acceleration ($m.s^{-2}$)')
    ax.legend()




.. image-sg:: /auto_examples/dicodile/images/sphx_glr_plot_gait_002.png
   :alt: plot gait
   :srcset: /auto_examples/dicodile/images/sphx_glr_plot_gait_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f70205e23d0>



.. GENERATED FROM PYTHON SOURCE LINES 46-50

We can see the alternating left and right foot movements.

In the rest of this example, we will only use the right foot vertical
acceleration.

.. GENERATED FROM PYTHON SOURCE LINES 52-53

# Convolutional Dictionary Learning

.. GENERATED FROM PYTHON SOURCE LINES 55-59

Now, let’s use "dicodile" as solver_z to learn patterns from the data and reconstruct the
signal from a sparse representation.

First, we initialize a dictionary from parts of the signal:

.. GENERATED FROM PYTHON SOURCE LINES 59-67

.. code-block:: default


    X = trial['data']['RAV'].to_numpy()

    # reshape X to (n_trials, n_channels, n_times)
    X = X.reshape(1, 1, *X.shape)

    print(X.shape)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    (1, 1, 18639)




.. GENERATED FROM PYTHON SOURCE LINES 68-71

Note the use of reshape to shape the signal as per alphacsc requirements: the
shape of the signal should be (n_trials, n_channels, n_times). Here, we have
a single-channel time series so it is (1, 1, n_times).

.. GENERATED FROM PYTHON SOURCE LINES 71-119

.. code-block:: default


    from alphacsc.init_dict import init_dictionary

    # set dictionary size
    n_atoms = 8

    # set individual atom (patch) size.
    n_times_atom = 200

    D_init = init_dictionary(X, 
                             n_atoms=8, 
                             n_times_atom=200,
                             rank1=False,
                             window=True,
                             D_init='chunk',
                             random_state=60)

    print(D_init.shape)

    ""
    from alphacsc import BatchCDL

    cdl = BatchCDL(
         # Shape of the dictionary
        n_atoms, 
        n_times_atom, 
        rank1=False,
        uv_constraint='auto',
        # Number of iteration for the alternate minimization and cvg threshold
        n_iter=3, 
        # number of workers to be used for dicodile
        n_jobs=4,
        # solver for the z-step
        solver_z='dicodile', 
        solver_z_kwargs={'max_iter': 10000}, 
        window=True,
        D_init= D_init,
        random_state=60)

    res = cdl.fit(X)

    ""
    from dicodile.utils.viz import display_dictionaries

    D_hat = res._D_hat

    fig = display_dictionaries(D_init, D_hat)




.. image-sg:: /auto_examples/dicodile/images/sphx_glr_plot_gait_003.png
   :alt: plot gait
   :srcset: /auto_examples/dicodile/images/sphx_glr_plot_gait_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    (8, 1, 200)
    [BatchCDL] Max value for lambda: 26.58408595270826
    Started 4 workers in 2.49s
    [BatchCDL] CD iterations 0 / 3
    [BatchCDL] lambda = 2.658e+00
    [BatchCDL] sparsity: 3.010e-03
    [BatchCDL] Objective (z) : 4.270e+03
    [FISTA:PROGRESS] 1s -   5.67% iterations    [FISTA:PROGRESS] 1s -   6.00% iterations    [FISTA:PROGRESS] 1s -   6.33% iterations    [FISTA:PROGRESS] 1s -   6.67% iterations    [FISTA:PROGRESS] 1s -   7.00% iterations    [FISTA:PROGRESS] 1s -   7.33% iterations    [FISTA:PROGRESS] 1s -   7.67% iterations    [FISTA:PROGRESS] 1s -   8.00% iterations    [FISTA:PROGRESS] 1s -   8.33% iterations    [FISTA:PROGRESS] 1s -   8.67% iterations    [FISTA:PROGRESS] 2s -   9.00% iterations    [FISTA:PROGRESS] 2s -   9.33% iterations    [FISTA:PROGRESS] 2s -   9.67% iterations    [FISTA:PROGRESS] 2s -  10.00% iterations    [FISTA:PROGRESS] 2s -  10.33% iterations    [FISTA:PROGRESS] 2s -  10.67% iterations    [FISTA:PROGRESS] 2s -  11.00% iterations    [FISTA:PROGRESS] 2s -  11.33% iterations    [FISTA:PROGRESS] 2s -  11.67% iterations    [FISTA:PROGRESS] 2s -  12.00% iterations    [FISTA:PROGRESS] 2s -  12.33% iterations    [FISTA:PROGRESS] 2s -  12.67% iterations    [FISTA:PROGRESS] 2s -  13.00% iterations    [FISTA:PROGRESS] 2s -  13.33% iterations    [FISTA:PROGRESS] 2s -  13.67% iterations    [FISTA:PROGRESS] 2s -  14.00% iterations    [FISTA:PROGRESS] 2s -  14.33% iterations    [FISTA:PROGRESS] 2s -  14.67% iterations    [FISTA:PROGRESS] 2s -  15.00% iterations    [FISTA:PROGRESS] 2s -  15.33% iterations    [FISTA:PROGRESS] 3s -  15.67% iterations    [FISTA:PROGRESS] 3s -  16.00% iterations    [FISTA:PROGRESS] 3s -  16.33% iterations    [FISTA:PROGRESS] 3s -  16.67% iterations    [FISTA:PROGRESS] 3s -  17.00% iterations    [FISTA:PROGRESS] 3s -  17.33% iterations    [FISTA:PROGRESS] 3s -  17.67% iterations    [FISTA:PROGRESS] 3s -  18.00% iterations    [FISTA:PROGRESS] 3s -  18.33% iterations    [FISTA:PROGRESS] 3s -  18.67% iterations    [FISTA:PROGRESS] 3s -  19.00% iterations    [FISTA:PROGRESS] 3s -  19.33% iterations    [FISTA:PROGRESS] 3s -  19.67% iterations    [FISTA:PROGRESS] 3s -  20.00% iterations    [FISTA:PROGRESS] 3s -  20.33% iterations    [FISTA:PROGRESS] 3s -  20.67% iterations    [FISTA:PROGRESS] 3s -  21.00% iterations    [FISTA:PROGRESS] 3s -  21.33% iterations    [FISTA:PROGRESS] 3s -  21.67% iterations    [FISTA:PROGRESS] 3s -  22.00% iterations    [FISTA:PROGRESS] 3s -  22.33% iterations    [FISTA:PROGRESS] 3s -  22.67% iterations    [FISTA:PROGRESS] 4s -  23.00% iterations    [FISTA:PROGRESS] 4s -  23.33% iterations    [FISTA:PROGRESS] 4s -  23.67% iterations    [FISTA:PROGRESS] 4s -  24.00% iterations    [FISTA:PROGRESS] 4s -  24.33% iterations    [FISTA:PROGRESS] 4s -  24.67% iterations    [FISTA:PROGRESS] 4s -  25.00% iterations    [FISTA:PROGRESS] 4s -  25.33% iterations    [FISTA:PROGRESS] 4s -  25.67% iterations    [FISTA:PROGRESS] 4s -  26.00% iterations    [FISTA:PROGRESS] 4s -  26.33% iterations    [FISTA:PROGRESS] 4s -  26.67% iterations    [FISTA:PROGRESS] 4s -  27.00% iterations    [FISTA:PROGRESS] 4s -  27.33% iterations    [FISTA:PROGRESS] 4s -  27.67% iterations    [FISTA:PROGRESS] 4s -  28.00% iterations    [FISTA:PROGRESS] 4s -  28.33% iterations    [FISTA:PROGRESS] 4s -  28.67% iterations    [FISTA:PROGRESS] 4s -  29.00% iterations    [FISTA:PROGRESS] 4s -  29.33% iterations    [FISTA:PROGRESS] 4s -  29.67% iterations    [FISTA:PROGRESS] 4s -  30.00% iterations    [FISTA:PROGRESS] 5s -  30.33% iterations    [FISTA:PROGRESS] 5s -  30.67% iterations    [FISTA:PROGRESS] 5s -  31.00% iterations    [FISTA:PROGRESS] 5s -  31.33% iterations    [FISTA:PROGRESS] 5s -  31.67% iterations    [FISTA:PROGRESS] 5s -  32.00% iterations    [FISTA:PROGRESS] 5s -  32.33% iterations    [FISTA:PROGRESS] 5s -  32.67% iterations    [FISTA:PROGRESS] 5s -  33.00% iterations    [FISTA:PROGRESS] 5s -  33.33% iterations    [FISTA:PROGRESS] 5s -  33.67% iterations    [FISTA:PROGRESS] 5s -  34.00% iterations    [FISTA:PROGRESS] 5s -  34.33% iterations    [FISTA:PROGRESS] 5s -  34.67% iterations    [FISTA:PROGRESS] 5s -  35.00% iterations    [FISTA:PROGRESS] 5s -  35.33% iterations    [FISTA:PROGRESS] 5s -  35.67% iterations    [FISTA:PROGRESS] 5s -  36.00% iterations    [FISTA:PROGRESS] 5s -  36.33% iterations    [FISTA:PROGRESS] 5s -  36.67% iterations    [FISTA:PROGRESS] 5s -  37.00% iterations    [FISTA:PROGRESS] 6s -  37.33% iterations    [FISTA:PROGRESS] 6s -  37.67% iterations    [FISTA:PROGRESS] 6s -  38.00% iterations    [FISTA:PROGRESS] 6s -  38.33% iterations    [FISTA:PROGRESS] 6s -  38.67% iterations    [FISTA:PROGRESS] 6s -  39.00% iterations    [FISTA:PROGRESS] 6s -  39.33% iterations    [FISTA:PROGRESS] 6s -  39.67% iterations    [FISTA:PROGRESS] 6s -  40.00% iterations    [FISTA:PROGRESS] 6s -  40.33% iterations    [FISTA:PROGRESS] 6s -  40.67% iterations    [FISTA:PROGRESS] 6s -  41.00% iterations    [FISTA:PROGRESS] 6s -  41.33% iterations    [FISTA:PROGRESS] 6s -  41.67% iterations    [FISTA:PROGRESS] 6s -  42.00% iterations    [FISTA:PROGRESS] 6s -  42.33% iterations    [FISTA:PROGRESS] 6s -  42.67% iterations    [FISTA:PROGRESS] 6s -  43.00% iterations    [FISTA:PROGRESS] 6s -  43.33% iterations    [FISTA:PROGRESS] 6s -  43.67% iterations    [FISTA:PROGRESS] 6s -  44.00% iterations    [FISTA:PROGRESS] 6s -  44.33% iterations    [FISTA:PROGRESS] 7s -  44.67% iterations    [FISTA:PROGRESS] 7s -  45.00% iterations    [FISTA:PROGRESS] 7s -  45.33% iterations    [FISTA:PROGRESS] 7s -  45.67% iterations    [FISTA:PROGRESS] 7s -  46.00% iterations    [FISTA:PROGRESS] 7s -  46.33% iterations    [FISTA:PROGRESS] 7s -  46.67% iterations    [FISTA:PROGRESS] 7s -  47.00% iterations    [FISTA:PROGRESS] 7s -  47.33% iterations    [FISTA:PROGRESS] 7s -  47.67% iterations    [FISTA:PROGRESS] 7s -  48.00% iterations    [FISTA:PROGRESS] 7s -  48.33% iterations    [FISTA:PROGRESS] 7s -  48.67% iterations    [FISTA:PROGRESS] 7s -  49.00% iterations    [FISTA:PROGRESS] 7s -  49.33% iterations    [FISTA:PROGRESS] 7s -  49.67% iterations    [FISTA:PROGRESS] 7s -  50.00% iterations    [FISTA:PROGRESS] 7s -  50.33% iterations    [FISTA:PROGRESS] 7s -  50.67% iterations    [FISTA:PROGRESS] 7s -  51.00% iterations    [FISTA:PROGRESS] 7s -  51.33% iterations    [FISTA:PROGRESS] 7s -  51.67% iterations    [FISTA:PROGRESS] 8s -  52.00% iterations    [FISTA:PROGRESS] 8s -  52.33% iterations    [FISTA:PROGRESS] 8s -  52.67% iterations    [FISTA:PROGRESS] 8s -  53.00% iterations    [FISTA:PROGRESS] 8s -  53.33% iterations    [FISTA:PROGRESS] 8s -  53.67% iterations    [FISTA:PROGRESS] 8s -  54.00% iterations    [FISTA:PROGRESS] 8s -  54.33% iterations    [FISTA:PROGRESS] 8s -  54.67% iterations    [FISTA:PROGRESS] 8s -  55.00% iterations    [FISTA:PROGRESS] 8s -  55.33% iterations    [FISTA:PROGRESS] 8s -  55.67% iterations    [FISTA:PROGRESS] 8s -  56.00% iterations    [FISTA:PROGRESS] 8s -  56.33% iterations    [FISTA:PROGRESS] 8s -  56.67% iterations    [FISTA:PROGRESS] 9s -  57.00% iterations    [FISTA:PROGRESS] 9s -  57.33% iterations    [Update D]: 173 iterations
    [BatchCDL] Resampled atom 0
    [BatchCDL] Objective (d) : 3.675e+03
    [BatchCDL] CD iterations 1 / 3
    [BatchCDL] lambda = 2.658e+00
    [BatchCDL] sparsity: 3.335e-03
    [BatchCDL] Objective (z) : 3.402e+03
    [FISTA:PROGRESS] 1s -   4.33% iterations    [FISTA:PROGRESS] 1s -   4.67% iterations    [FISTA:PROGRESS] 1s -   5.00% iterations    [FISTA:PROGRESS] 1s -   5.33% iterations    [Update D]: 17 iterations
    [BatchCDL] Resampled atom 1
    [BatchCDL] Objective (d) : 3.323e+03
    [BatchCDL] CD iterations 2 / 3
    [BatchCDL] lambda = 2.658e+00
    [BatchCDL] sparsity: 3.294e-03
    [BatchCDL] Objective (z) : 3.219e+03
    [FISTA:PROGRESS] 1s -   5.00% iterations    [FISTA:PROGRESS] 1s -   5.33% iterations    [FISTA:PROGRESS] 1s -   5.67% iterations    [FISTA:PROGRESS] 1s -   6.00% iterations    [FISTA:PROGRESS] 1s -   6.33% iterations    [FISTA:PROGRESS] 1s -   6.67% iterations    [FISTA:PROGRESS] 1s -   7.00% iterations    [FISTA:PROGRESS] 1s -   7.33% iterations    [FISTA:PROGRESS] 1s -   7.67% iterations    [FISTA:PROGRESS] 1s -   8.00% iterations    [FISTA:PROGRESS] 2s -   8.33% iterations    [FISTA:PROGRESS] 2s -   8.67% iterations    [FISTA:PROGRESS] 2s -   9.00% iterations    [FISTA:PROGRESS] 2s -   9.33% iterations    [FISTA:PROGRESS] 2s -   9.67% iterations    [FISTA:PROGRESS] 2s -  10.00% iterations    [FISTA:PROGRESS] 2s -  10.33% iterations    [FISTA:PROGRESS] 2s -  10.67% iterations    [FISTA:PROGRESS] 2s -  11.00% iterations    [FISTA:PROGRESS] 2s -  11.33% iterations    [FISTA:PROGRESS] 2s -  11.67% iterations    [FISTA:PROGRESS] 2s -  12.00% iterations    [FISTA:PROGRESS] 2s -  12.33% iterations    [FISTA:PROGRESS] 2s -  12.67% iterations    [FISTA:PROGRESS] 2s -  13.00% iterations    [FISTA:PROGRESS] 2s -  13.33% iterations    [FISTA:PROGRESS] 2s -  13.67% iterations    [FISTA:PROGRESS] 2s -  14.00% iterations    [FISTA:PROGRESS] 2s -  14.33% iterations    [FISTA:PROGRESS] 3s -  14.67% iterations    [FISTA:PROGRESS] 3s -  15.00% iterations    [Update D]: 46 iterations
    [BatchCDL] Resampled atom 5
    [BatchCDL] Objective (d) : 3.153e+03
    [BatchCDL] Fit in 36.3s




.. GENERATED FROM PYTHON SOURCE LINES 120-121

# Signal reconstruction

.. GENERATED FROM PYTHON SOURCE LINES 123-124

Now, let's reconstruct the original signal.

.. GENERATED FROM PYTHON SOURCE LINES 124-131

.. code-block:: default


    from alphacsc.utils import construct_X_multi

    z_hat = res._z_hat

    X_hat = construct_X_multi(z_hat, D_hat)








.. GENERATED FROM PYTHON SOURCE LINES 132-133

Plot a small part of the original and reconstructed signals

.. GENERATED FROM PYTHON SOURCE LINES 133-143

.. code-block:: default


    fig_hat, ax_hat = plt.subplots()
    ax_hat.plot(X[0][0][5000:5800],
                label='right foot vertical acceleration (ORIGINAL)')
    ax_hat.plot(X_hat[0][0][5000:5800],
                label='right foot vertical acceleration (RECONSTRUCTED)')
    ax_hat.set_xlabel('time (x10ms)')
    ax_hat.set_ylabel('acceleration ($m.s^{-2}$)')
    ax_hat.legend()




.. image-sg:: /auto_examples/dicodile/images/sphx_glr_plot_gait_004.png
   :alt: plot gait
   :srcset: /auto_examples/dicodile/images/sphx_glr_plot_gait_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f701386c550>



.. GENERATED FROM PYTHON SOURCE LINES 144-145

Check that our representation is indeed sparse:

.. GENERATED FROM PYTHON SOURCE LINES 145-149

.. code-block:: default



    np.count_nonzero(z_hat)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    486



.. GENERATED FROM PYTHON SOURCE LINES 150-151

Besides our visual check, a measure of how closely we’re reconstructing the original signal is the (normalized) cross-correlation. Let’s compute this:

.. GENERATED FROM PYTHON SOURCE LINES 151-155

.. code-block:: default


    np.correlate(X[0][0], X_hat[0][0]) / (
        np.sqrt(np.correlate(X[0][0], X[0][0]) * np.correlate(X_hat[0][0], X_hat[0][0])))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    array([0.98280091])



.. GENERATED FROM PYTHON SOURCE LINES 156-157

# Multichannel signals

.. GENERATED FROM PYTHON SOURCE LINES 159-160

DiCoDiLe works just as well with multi-channel signals. The gait dataset contains 16 signals (8 for each foot), in the rest of this tutorial, we’ll use three of those.

.. GENERATED FROM PYTHON SOURCE LINES 160-164

.. code-block:: default


    # Left foot Vertical acceleration, Y rotation and X acceleration
    channels = ['LAV', 'LRY', 'LAX']








.. GENERATED FROM PYTHON SOURCE LINES 165-166

Let’s look at a small portion of multi-channel data

.. GENERATED FROM PYTHON SOURCE LINES 166-175

.. code-block:: default


    colors = plt.rcParams["axes.prop_cycle"]()
    mc_fig, mc_ax = plt.subplots(len(channels), sharex=True)

    for ax, chan in zip(mc_ax, channels):
        ax.plot(trial['data'][chan][5000:5800],
                label=chan, color=next(colors)["color"])
    mc_fig.legend(loc="upper center")




.. image-sg:: /auto_examples/dicodile/images/sphx_glr_plot_gait_005.png
   :alt: plot gait
   :srcset: /auto_examples/dicodile/images/sphx_glr_plot_gait_005.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f70137636a0>



.. GENERATED FROM PYTHON SOURCE LINES 176-177

Let’s put the data in shape for alphacsc: (n_trials, n_channels, n_times)

.. GENERATED FROM PYTHON SOURCE LINES 177-184

.. code-block:: default


    X_mc_subset = trial['data'][channels].to_numpy().T

    X_mc_subset = X_mc_subset.reshape(1, *X_mc_subset.shape)

    print(X_mc_subset.shape)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    (1, 3, 18639)




.. GENERATED FROM PYTHON SOURCE LINES 185-186

Initialize the dictionary (note that the call is identical to the single-channel version)

.. GENERATED FROM PYTHON SOURCE LINES 186-197

.. code-block:: default


    D_init_mc = init_dictionary(X_mc_subset, 
                             n_atoms=8, 
                             n_times_atom=200,
                             rank1=False,
                             window=True,
                             D_init='chunk',
                             random_state=60)

    print(D_init_mc.shape)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    (8, 3, 200)




.. GENERATED FROM PYTHON SOURCE LINES 198-199

And run DiCoDiLe (note that the call is identical to the single-channel version here as well)

.. GENERATED FROM PYTHON SOURCE LINES 199-221

.. code-block:: default


    from alphacsc import BatchCDL

    cdl = BatchCDL(
         # Shape of the dictionary
        n_atoms, 
        n_times_atom, 
        rank1=False,
        uv_constraint='auto',
        # Number of iteration for the alternate minimization and cvg threshold
        n_iter=3, 
        # number of workers to be used for dicodile
        n_jobs=4,
        # solver for the z-step
        solver_z='dicodile', 
        solver_z_kwargs={'max_iter': 10000}, 
        window=True,
        D_init= D_init_mc,
        random_state=60)

    res = cdl.fit(X_mc_subset)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [BatchCDL] Max value for lambda: 31.91332122387331
    Started 4 workers in 2.42s
    [BatchCDL] CD iterations 0 / 3
    [BatchCDL] lambda = 3.191e+00
    [BatchCDL] sparsity: 5.457e-03
    [BatchCDL] Objective (z) : 7.983e+03
    [FISTA:PROGRESS] 1s -   2.33% iterations    [FISTA:PROGRESS] 1s -   2.67% iterations    [FISTA:PROGRESS] 1s -   3.00% iterations    [Update D]: 10 iterations
    [BatchCDL] Objective (d) : 7.598e+03
    [BatchCDL] CD iterations 1 / 3
    [BatchCDL] lambda = 3.191e+00
    [BatchCDL] sparsity: 4.332e-03
    [BatchCDL] Objective (z) : 7.473e+03
    [Update D]: 6 iterations
    [BatchCDL] Objective (d) : 7.436e+03
    [BatchCDL] CD iterations 2 / 3
    [BatchCDL] lambda = 3.191e+00
    [BatchCDL] sparsity: 3.783e-03
    [BatchCDL] Objective (z) : 7.404e+03
    [FISTA:PROGRESS] 1s -   2.00% iterations    [FISTA:PROGRESS] 1s -   2.33% iterations    [FISTA:PROGRESS] 1s -   2.67% iterations    [FISTA:PROGRESS] 1s -   3.00% iterations    [FISTA:PROGRESS] 1s -   3.33% iterations    [FISTA:PROGRESS] 1s -   3.67% iterations    [FISTA:PROGRESS] 2s -   4.00% iterations    [FISTA:PROGRESS] 2s -   4.33% iterations    [FISTA:PROGRESS] 2s -   4.67% iterations    [FISTA:PROGRESS] 2s -   5.00% iterations    [FISTA:PROGRESS] 2s -   5.33% iterations    [FISTA:PROGRESS] 2s -   5.67% iterations    [FISTA:PROGRESS] 2s -   6.00% iterations    [FISTA:PROGRESS] 2s -   6.33% iterations    [FISTA:PROGRESS] 2s -   6.67% iterations    [FISTA:PROGRESS] 2s -   7.00% iterations    [FISTA:PROGRESS] 2s -   7.33% iterations    [Update D]: 23 iterations
    [BatchCDL] Objective (d) : 7.376e+03
    [BatchCDL] Fit in 37.8s




.. GENERATED FROM PYTHON SOURCE LINES 222-223

# Signal reconstruction (multichannel)

.. GENERATED FROM PYTHON SOURCE LINES 225-226

Now, let’s reconstruct the original signal

.. GENERATED FROM PYTHON SOURCE LINES 226-235

.. code-block:: default


    from alphacsc.utils import construct_X_multi

    z_hat_mc = res._z_hat

    D_hat_mc = res._D_hat

    X_hat_mc = construct_X_multi(z_hat_mc, D_hat_mc)








.. GENERATED FROM PYTHON SOURCE LINES 236-237

Let’s visually compare a small part of the original and reconstructed signals along with the activations.

.. GENERATED FROM PYTHON SOURCE LINES 237-266

.. code-block:: default


    z_hat_mc.shape

    ""
    viz_start_idx = 4000
    viz_end_idx = 5800
    viz_chan = 2

    max_abs = np.max(np.abs(z_hat_mc), axis=-1)
    max_abs = max_abs.reshape(z_hat_mc.shape[1], 1)
    z_hat_normalized = z_hat_mc / max_abs

    fig_hat_mc, ax_hat_mc = plt.subplots(2, figsize=(12, 8))

    # plot original and constructed
    ax_hat_mc[0].plot(X_mc_subset[0][viz_chan][viz_start_idx:viz_end_idx],
                      label='ORIGINAL')
    ax_hat_mc[0].plot(X_hat_mc[0][viz_chan][viz_start_idx:viz_end_idx],
                      label='RECONSTRUCTED')

    ax_hat_mc[0].set_xlabel('time (x10ms)')
    ax_hat_mc[0].legend()

    # plot activations
    for idx in range(z_hat_normalized.shape[1]):
        ax_hat_mc[1].stem(z_hat_normalized[0][idx][viz_start_idx:viz_end_idx],
                          linefmt=f"C{idx}-",
                          markerfmt=f"C{idx}o")




.. image-sg:: /auto_examples/dicodile/images/sphx_glr_plot_gait_006.png
   :alt: plot gait
   :srcset: /auto_examples/dicodile/images/sphx_glr_plot_gait_006.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  15.790 seconds)


.. _sphx_glr_download_auto_examples_dicodile_plot_gait.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_gait.py <plot_gait.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_gait.ipynb <plot_gait.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

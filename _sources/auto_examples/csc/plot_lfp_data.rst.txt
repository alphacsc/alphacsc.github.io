.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_csc_plot_lfp_data.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_csc_plot_lfp_data.py:


==============================
CSC to learn LFP spiking atoms
==============================

Here, we show how CSC can be used to learn spiking
atoms from Local Field Potential (LFP) data [1].

[1] Hitziger, Sebastian, et al.
    Adaptive Waveform Learning: A Framework for Modeling Variability in
    Neurophysiological Signals. IEEE Transactions on Signal Processing (2017).


First, let us fetch the data (~14 MB)



.. code-block:: python

    import os
    from mne.utils import _fetch_file

    url = ('https://github.com/hitziger/AWL/raw/master/Experiments/data/'
           'LFP_data_contiguous_1250_Hz.mat')
    fname = './LFP_data_contiguous_1250_Hz.mat'
    if not os.path.exists(fname):
        _fetch_file(url, fname)







It is a mat file, so we use scipy to load it



.. code-block:: python

    from scipy import io

    data = io.loadmat(fname)
    X, sfreq = data['X'].T, float(data['sfreq'])







And now let us look at the data



.. code-block:: python

    import numpy as np
    import matplotlib.pyplot as plt

    start, stop = 11000, 15000
    times = np.arange(start, stop) / sfreq
    plt.plot(times, X[0, start:stop], color='b')
    plt.xlabel('Time (s)')
    plt.ylabel(r'$\mu$ V')
    plt.xlim([9., 12.])




.. image:: /auto_examples/csc/images/sphx_glr_plot_lfp_data_001.png
    :class: sphx-glr-single-img




and filter it using a convenient function from MNE. This will remove low
frequency drifts, but we keep the high frequencies



.. code-block:: python

    from mne.filter import filter_data
    X = filter_data(
        X.astype(np.float64), sfreq, l_freq=1, h_freq=None, fir_design='firwin')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Setting up high-pass filter at 1 Hz

    FIR filter parameters
    ---------------------
    Designing a one-pass, zero-phase, non-causal highpass filter:
    - Windowed time-domain design (firwin) method
    - Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation
    - Lower passband edge: 1.00
    - Lower transition bandwidth: 1.00 Hz (-6 dB cutoff frequency: 0.50 Hz)
    - Filter length: 4125 samples (3.300 sec)


Now, we define the parameters of our model.



.. code-block:: python


    reg = 6.0
    n_times = 2500
    n_times_atom = 350
    n_trials = 100
    n_atoms = 3
    n_iter = 60






Let's stick to one random state for now, but if you want to learn how to
select the random state, consult :ref:`this example
<sphx_glr_auto_examples_plot_simulate_randomstate.py>`.



.. code-block:: python

    random_state = 10







Now, we epoch the trials



.. code-block:: python


    overlap = 0
    starts = np.arange(0, X.shape[1] - n_times, n_times - overlap)
    stops = np.arange(n_times, X.shape[1], n_times - overlap)

    X_new = []
    for idx, (start, stop) in enumerate(zip(starts, stops)):
        if idx >= n_trials:
            break
        X_new.append(X[0, start:stop])
    X_new = np.vstack(X_new)
    del X







We remove the mean and scale to unit variance.



.. code-block:: python

    X_new -= np.mean(X_new)
    X_new /= np.std(X_new)







The convolutions can result in edge artifacts at the edges of the trials.
Therefore, we discount the contributions from the edges by windowing the
trials.



.. code-block:: python

    from numpy import hamming
    X_new *= hamming(n_times)[None, :]







Of course, in a data-limited setting we want to use as much of the data as
possible. If this is the case, you can set `overlap` to non-zero (for example
half the epoch length).

Now, we run regular CSC since the trials are not too noisy



.. code-block:: python

    from alphacsc import learn_d_z
    pobj, times, d_hat, z_hat, reg = learn_d_z(X_new, n_atoms, n_times_atom,
                                               reg=reg, n_iter=n_iter,
                                               random_state=random_state, n_jobs=1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Coordinate descent loop 0 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 51134.32096508
    Using method dual for projection
    [seed 10] Objective (d) 45299.80903125
    Coordinate descent loop 1 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 26399.47853871
    Using method dual for projection
    [seed 10] Objective (d) 25948.80915409
    Coordinate descent loop 2 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 23777.89064427
    Using method dual for projection
    [seed 10] Objective (d) 23704.90593344
    Coordinate descent loop 3 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 22233.60227587
    Using method dual for projection
    [seed 10] Objective (d) 22221.01870097
    Coordinate descent loop 4 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 21202.43876006
    Using method dual for projection
    [seed 10] Objective (d) 21169.49202496
    Coordinate descent loop 5 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 20579.63611160
    Using method dual for projection
    [seed 10] Objective (d) 20618.98107838
    Coordinate descent loop 6 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 20283.55110757
    Using method dual for projection
    [seed 10] Objective (d) 20210.75292119
    Coordinate descent loop 7 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 19971.53116238
    Using method dual for projection
    [seed 10] Objective (d) 19970.52325693
    Coordinate descent loop 8 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 19708.44554814
    Using method dual for projection
    [seed 10] Objective (d) 19691.20196937
    Coordinate descent loop 9 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 19462.43966049
    Using method dual for projection
    [seed 10] Objective (d) 19467.01239142
    Coordinate descent loop 10 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 19233.45092820
    Using method dual for projection
    [seed 10] Objective (d) 19214.12766228
    Coordinate descent loop 11 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 19085.64469638
    Using method dual for projection
    [seed 10] Objective (d) 19084.13170902
    Coordinate descent loop 12 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18945.61954180
    Using method dual for projection
    [seed 10] Objective (d) 18980.31578132
    Coordinate descent loop 13 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18876.43985523
    Using method dual for projection
    [seed 10] Objective (d) 18836.38353365
    Coordinate descent loop 14 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18720.74584343
    Using method dual for projection
    [seed 10] Objective (d) 18721.54845148
    Coordinate descent loop 15 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18623.64002130
    Using method dual for projection
    [seed 10] Objective (d) 18621.18904483
    Coordinate descent loop 16 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18547.81611675
    Using method dual for projection
    [seed 10] Objective (d) 18545.24281147
    Coordinate descent loop 17 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18471.88752074
    Using method dual for projection
    [seed 10] Objective (d) 18470.42055100
    Coordinate descent loop 18 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18393.84202338
    Using method dual for projection
    [seed 10] Objective (d) 18391.78226336
    Coordinate descent loop 19 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18331.73169078
    Using method dual for projection
    [seed 10] Objective (d) 18328.84451720
    Coordinate descent loop 20 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18274.15271779
    Using method dual for projection
    [seed 10] Objective (d) 18297.40702029
    Coordinate descent loop 21 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18257.44912783
    Using method dual for projection
    [seed 10] Objective (d) 18276.17809046
    Coordinate descent loop 22 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18243.49274506
    Using method dual for projection
    [seed 10] Objective (d) 18261.00618895
    Coordinate descent loop 23 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18234.36110479
    Using method dual for projection
    [seed 10] Objective (d) 18208.94505776
    Coordinate descent loop 24 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18179.04646219
    Using method dual for projection
    [seed 10] Objective (d) 18179.60670593
    Coordinate descent loop 25 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18156.84098729
    Using method dual for projection
    [seed 10] Objective (d) 18166.58627386
    Coordinate descent loop 26 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18145.85002218
    Using method dual for projection
    [seed 10] Objective (d) 18152.93056963
    Coordinate descent loop 27 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18131.29820879
    Using method dual for projection
    [seed 10] Objective (d) 18131.16932624
    Coordinate descent loop 28 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18119.63496731
    Using method dual for projection
    [seed 10] Objective (d) 18111.53151445
    Coordinate descent loop 29 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18095.94337919
    Using method dual for projection
    [seed 10] Objective (d) 18106.50708393
    Coordinate descent loop 30 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18098.05240730
    Using method dual for projection
    [seed 10] Objective (d) 18097.82993139
    Coordinate descent loop 31 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18084.15735694
    Using method dual for projection
    [seed 10] Objective (d) 18025.10058065
    Coordinate descent loop 32 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18015.48731118
    Using method dual for projection
    [seed 10] Objective (d) 18015.15574156
    Coordinate descent loop 33 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18009.09809308
    Using method dual for projection
    [seed 10] Objective (d) 18010.63891230
    Coordinate descent loop 34 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18004.88798979
    Using method dual for projection
    [seed 10] Objective (d) 18058.43309136
    Coordinate descent loop 35 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18049.18838899
    Using method dual for projection
    [seed 10] Objective (d) 17997.43396617
    Coordinate descent loop 36 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17990.54846773
    Using method dual for projection
    [seed 10] Objective (d) 17990.87721074
    Coordinate descent loop 37 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17985.96105990
    Using method dual for projection
    [seed 10] Objective (d) 17988.72476993
    Coordinate descent loop 38 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17984.75063317
    Using method dual for projection
    [seed 10] Objective (d) 18049.42030514
    Coordinate descent loop 39 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18046.54422656
    Using method dual for projection
    [seed 10] Objective (d) 17984.35836537
    Coordinate descent loop 40 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17980.96835969
    Using method dual for projection
    [seed 10] Objective (d) 17980.80620237
    Coordinate descent loop 41 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17972.69004354
    Using method dual for projection
    [seed 10] Objective (d) 17972.03747172
    Coordinate descent loop 42 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17966.98243129
    Using method dual for projection
    [seed 10] Objective (d) 17966.82745996
    Coordinate descent loop 43 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17962.43526093
    Using method dual for projection
    [seed 10] Objective (d) 17977.52425942
    Coordinate descent loop 44 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17975.02312142
    Using method dual for projection
    [seed 10] Objective (d) 17966.27697620
    Coordinate descent loop 45 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17963.86502401
    Using method dual for projection
    [seed 10] Objective (d) 17978.81696731
    Coordinate descent loop 46 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17976.66386761
    Using method dual for projection
    [seed 10] Objective (d) 17972.08452402
    Coordinate descent loop 47 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17969.94712496
    Using method dual for projection
    [seed 10] Objective (d) 17972.16248179
    Coordinate descent loop 48 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17969.80982742
    Using method dual for projection
    [seed 10] Objective (d) 17965.32088550
    Coordinate descent loop 49 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17963.52105045
    Using method dual for projection
    [seed 10] Objective (d) 17969.73717743
    Coordinate descent loop 50 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17965.93952973
    Using method dual for projection
    [seed 10] Objective (d) 17962.61344222
    Coordinate descent loop 51 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17960.23764388
    Using method dual for projection
    [seed 10] Objective (d) 17958.61430481
    Coordinate descent loop 52 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17957.27794449
    Using method dual for projection
    [seed 10] Objective (d) 17959.05579241
    Coordinate descent loop 53 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17957.89743528
    Using method dual for projection
    [seed 10] Objective (d) 17968.17437821
    Coordinate descent loop 54 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17966.07724194
    Using method dual for projection
    [seed 10] Objective (d) 17961.45354913
    Coordinate descent loop 55 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17960.46122527
    Using method dual for projection
    [seed 10] Objective (d) 17950.43436541
    Coordinate descent loop 56 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17949.36983447
    Using method dual for projection
    [seed 10] Objective (d) 17959.87901989
    Coordinate descent loop 57 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17958.57140543
    Using method dual for projection
    [seed 10] Objective (d) 17948.39023364
    Coordinate descent loop 58 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17947.12304555
    Using method dual for projection
    [seed 10] Objective (d) 17950.60429938
    Coordinate descent loop 59 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17949.39827823
    Using method dual for projection
    [seed 10] Objective (d) 17947.44834325


Let's look at the atoms now.



.. code-block:: python

    plt.figure()
    plt.plot(d_hat.T)
    plt.show()



.. image:: /auto_examples/csc/images/sphx_glr_plot_lfp_data_002.png
    :class: sphx-glr-single-img




**Total running time of the script:** ( 1 minutes  8.982 seconds)


.. _sphx_glr_download_auto_examples_csc_plot_lfp_data.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_lfp_data.py <plot_lfp_data.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_lfp_data.ipynb <plot_lfp_data.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_

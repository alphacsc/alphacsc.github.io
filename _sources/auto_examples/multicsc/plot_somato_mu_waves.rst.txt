
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/multicsc/plot_somato_mu_waves.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_multicsc_plot_somato_mu_waves.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_multicsc_plot_somato_mu_waves.py:


===========================================================
Extracting :math:`\mu`-wave from the somato-sensory dataset
===========================================================

This example illustrates how to learn rank-1 atoms [1]_ on the multivariate
somato-sensorymotor dataset from :code:`mne`. The displayed results highlight
the presence of :math:`\mu`-waves located in the SI cortex.

.. [1] Dupré La Tour, T., Moreau, T., Jas, M., & Gramfort, A. (2018).
    `Multivariate Convolutional Sparse Coding for Electromagnetic Brain Signals
    <https://arxiv.org/abs/1805.09654v2>`_. Advances in Neural Information
    Processing Systems (NIPS).

.. GENERATED FROM PYTHON SOURCE LINES 15-23

.. code-block:: default


    # Authors: Thomas Moreau <thomas.moreau@inria.fr>
    #          Mainak Jas <mainak.jas@telecom-paristech.fr>
    #          Tom Dupre La Tour <tom.duprelatour@telecom-paristech.fr>
    #          Alexandre Gramfort <alexandre.gramfort@telecom-paristech.fr>
    #
    # License: BSD (3-clause)








.. GENERATED FROM PYTHON SOURCE LINES 24-25

Let us first define the parameters of our model.

.. GENERATED FROM PYTHON SOURCE LINES 25-32

.. code-block:: default


    sfreq = 150.

    # Define the shape of the dictionary
    n_atoms = 25
    n_times_atom = int(round(sfreq * 1.0))  # 1000. ms








.. GENERATED FROM PYTHON SOURCE LINES 33-34

Next, we define the parameters for multivariate CSC

.. GENERATED FROM PYTHON SOURCE LINES 34-56

.. code-block:: default


    from alphacsc import BatchCDL
    cdl = BatchCDL(
        # Shape of the dictionary
        n_atoms=n_atoms,
        n_times_atom=n_times_atom,
        # Request a rank1 dictionary with unit norm temporal and spatial maps
        rank1=True, uv_constraint='separate',
        # Initialize the dictionary with random chunk from the data
        D_init='chunk',
        # rescale the regularization parameter to be 20% of lambda_max
        lmbd_max="scaled", reg=.2,
        # Number of iteration for the alternate minimization and cvg threshold
        n_iter=100, eps=1e-4,
        # solver for the z-step
        solver_z="lgcd", solver_z_kwargs={'tol': 1e-2, 'max_iter': 1000},
        # solver for the d-step
        solver_d='alternate_adaptive', solver_d_kwargs={'max_iter': 300},
        # Technical parameters
        verbose=1, random_state=0, n_jobs=6)









.. GENERATED FROM PYTHON SOURCE LINES 57-60

Here, we load the data from the somato-sensory dataset and preprocess them
in epochs. The epochs are selected around the stim, starting 2 seconds
before and finishing 4 seconds after.

.. GENERATED FROM PYTHON SOURCE LINES 60-66

.. code-block:: default


    from alphacsc.datasets.mne_data import load_data
    t_lim = (-2, 4)
    X, info = load_data(dataset='somato', epoch=t_lim, sfreq=sfreq)






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Using default location ~/mne_data for somato...
      0%|                                               | 0.00/611M [00:00<?, ?B/s]      0%|                                       | 795k/611M [00:00<01:16, 7.95MB/s]      1%|▎                                     | 5.24M/611M [00:00<00:20, 28.9MB/s]      1%|▌                                     | 8.10M/611M [00:00<00:23, 25.3MB/s]      2%|▊                                     | 13.1M/611M [00:00<00:17, 34.1MB/s]      3%|█▏                                    | 18.3M/611M [00:00<00:14, 40.3MB/s]      4%|█▍                                    | 23.4M/611M [00:00<00:13, 43.9MB/s]      5%|█▊                                    | 28.8M/611M [00:00<00:12, 46.9MB/s]      6%|██                                    | 34.1M/611M [00:00<00:11, 49.0MB/s]      6%|██▍                                   | 39.5M/611M [00:00<00:11, 50.4MB/s]      7%|██▊                                   | 45.0M/611M [00:01<00:10, 51.9MB/s]      8%|███▏                                  | 50.5M/611M [00:01<00:10, 52.7MB/s]      9%|███▍                                  | 56.0M/611M [00:01<00:10, 53.5MB/s]     10%|███▊                                  | 61.5M/611M [00:01<00:10, 53.9MB/s]     11%|████▏                                 | 67.0M/611M [00:01<00:10, 54.1MB/s]     12%|████▌                                 | 72.4M/611M [00:01<00:09, 54.3MB/s]     13%|████▊                                 | 77.8M/611M [00:01<00:09, 54.2MB/s]     14%|█████▏                                | 83.3M/611M [00:01<00:09, 54.1MB/s]     15%|█████▌                                | 88.7M/611M [00:01<00:09, 53.7MB/s]     15%|█████▊                                | 94.1M/611M [00:01<00:09, 53.6MB/s]     16%|██████▏                               | 99.4M/611M [00:02<00:09, 53.6MB/s]     17%|██████▋                                | 105M/611M [00:02<00:09, 53.9MB/s]     18%|███████                                | 110M/611M [00:02<00:09, 53.9MB/s]     19%|███████▍                               | 116M/611M [00:02<00:09, 53.9MB/s]     20%|███████▋                               | 121M/611M [00:02<00:09, 53.7MB/s]     21%|████████                               | 127M/611M [00:02<00:08, 53.9MB/s]     22%|████████▍                              | 132M/611M [00:02<00:08, 54.3MB/s]     23%|████████▊                              | 137M/611M [00:02<00:08, 54.4MB/s]     23%|█████████▏                             | 143M/611M [00:02<00:08, 54.4MB/s]     24%|█████████▍                             | 148M/611M [00:02<00:08, 54.6MB/s]     25%|█████████▊                             | 154M/611M [00:03<00:08, 54.8MB/s]     26%|██████████▏                            | 159M/611M [00:03<00:08, 54.9MB/s]     27%|██████████▌                            | 165M/611M [00:03<00:12, 35.6MB/s]     28%|██████████▊                            | 169M/611M [00:03<00:18, 24.0MB/s]     28%|███████████                            | 173M/611M [00:03<00:18, 23.6MB/s]     29%|███████████▏                           | 176M/611M [00:04<00:22, 19.1MB/s]     30%|███████████▌                           | 181M/611M [00:04<00:18, 23.5MB/s]     30%|███████████▊                           | 186M/611M [00:04<00:14, 28.8MB/s]     31%|████████████▏                          | 191M/611M [00:04<00:12, 33.8MB/s]     32%|████████████▍                          | 195M/611M [00:04<00:11, 35.0MB/s]     33%|████████████▋                          | 199M/611M [00:05<00:19, 21.2MB/s]     33%|████████████▉                          | 202M/611M [00:05<00:24, 16.6MB/s]     34%|█████████████                          | 205M/611M [00:05<00:29, 13.6MB/s]     34%|█████████████▏                         | 207M/611M [00:05<00:32, 12.3MB/s]     34%|█████████████▎                         | 209M/611M [00:06<00:33, 12.0MB/s]     34%|█████████████▍                         | 210M/611M [00:06<00:32, 12.3MB/s]     35%|█████████████▌                         | 212M/611M [00:06<00:31, 12.7MB/s]     35%|█████████████▌                         | 213M/611M [00:06<00:30, 12.9MB/s]     35%|█████████████▋                         | 214M/611M [00:06<00:30, 13.1MB/s]     35%|█████████████▊                         | 216M/611M [00:06<00:29, 13.6MB/s]     36%|█████████████▉                         | 218M/611M [00:06<00:27, 14.5MB/s]     36%|██████████████                         | 219M/611M [00:06<00:26, 14.7MB/s]     36%|██████████████                         | 221M/611M [00:06<00:26, 15.0MB/s]     36%|██████████████▏                        | 223M/611M [00:06<00:24, 15.9MB/s]     37%|██████████████▎                        | 224M/611M [00:07<00:28, 13.5MB/s]     37%|██████████████▍                        | 226M/611M [00:07<00:27, 13.9MB/s]     37%|██████████████▌                        | 227M/611M [00:07<00:28, 13.3MB/s]     37%|██████████████▌                        | 229M/611M [00:07<00:29, 12.9MB/s]     38%|██████████████▋                        | 230M/611M [00:07<00:29, 13.0MB/s]     38%|██████████████▊                        | 232M/611M [00:07<00:27, 13.7MB/s]     38%|██████████████▉                        | 233M/611M [00:07<00:26, 14.0MB/s]     38%|███████████████                        | 235M/611M [00:07<00:25, 14.7MB/s]     39%|███████████████▏                       | 237M/611M [00:07<00:21, 17.0MB/s]     40%|███████████████▌                       | 243M/611M [00:08<00:13, 27.5MB/s]     40%|███████████████▋                       | 245M/611M [00:08<00:19, 19.0MB/s]     41%|███████████████▊                       | 248M/611M [00:08<00:22, 16.1MB/s]     41%|███████████████▉                       | 250M/611M [00:08<00:25, 14.2MB/s]     41%|████████████████                       | 251M/611M [00:08<00:26, 13.3MB/s]     42%|████████████████▍                      | 257M/611M [00:08<00:16, 22.0MB/s]     43%|████████████████▋                      | 262M/611M [00:09<00:12, 27.5MB/s]     43%|████████████████▉                      | 265M/611M [00:09<00:14, 23.3MB/s]     44%|█████████████████▎                     | 270M/611M [00:09<00:11, 30.1MB/s]     45%|█████████████████▋                     | 276M/611M [00:09<00:09, 36.5MB/s]     46%|█████████████████▉                     | 280M/611M [00:09<00:10, 32.5MB/s]     47%|██████████████████▏                    | 284M/611M [00:10<00:17, 19.2MB/s]     47%|██████████████████▎                    | 287M/611M [00:10<00:21, 14.9MB/s]     47%|██████████████████▍                    | 289M/611M [00:10<00:21, 14.7MB/s]     48%|██████████████████▌                    | 291M/611M [00:10<00:20, 15.4MB/s]     49%|██████████████████▉                    | 297M/611M [00:10<00:13, 22.7MB/s]     49%|███████████████████▎                   | 302M/611M [00:10<00:10, 29.5MB/s]     50%|███████████████████▋                   | 308M/611M [00:10<00:08, 35.3MB/s]     51%|████████████████████                   | 313M/611M [00:11<00:07, 39.8MB/s]     52%|████████████████████▎                  | 318M/611M [00:11<00:08, 36.3MB/s]     53%|████████████████████▌                  | 322M/611M [00:11<00:08, 35.6MB/s]     54%|████████████████████▉                  | 327M/611M [00:11<00:06, 40.8MB/s]     55%|█████████████████████▎                 | 333M/611M [00:11<00:06, 44.9MB/s]     55%|█████████████████████▌                 | 338M/611M [00:11<00:06, 41.2MB/s]     56%|█████████████████████▊                 | 342M/611M [00:11<00:06, 41.4MB/s]     57%|██████████████████████▏                | 348M/611M [00:11<00:05, 45.4MB/s]     58%|██████████████████████▌                | 354M/611M [00:11<00:05, 48.8MB/s]     59%|██████████████████████▉                | 359M/611M [00:12<00:09, 26.7MB/s]     59%|███████████████████████▏               | 363M/611M [00:12<00:11, 21.6MB/s]     60%|███████████████████████▎               | 366M/611M [00:12<00:12, 18.8MB/s]     60%|███████████████████████▌               | 368M/611M [00:13<00:13, 17.5MB/s]     61%|███████████████████████▋               | 371M/611M [00:13<00:16, 14.7MB/s]     61%|███████████████████████▊               | 372M/611M [00:13<00:17, 14.0MB/s]     61%|███████████████████████▉               | 374M/611M [00:13<00:19, 12.1MB/s]     61%|███████████████████████▉               | 375M/611M [00:13<00:20, 11.7MB/s]     62%|████████████████████████               | 377M/611M [00:14<00:22, 10.4MB/s]     62%|████████████████████████▏              | 378M/611M [00:14<00:22, 10.5MB/s]     62%|████████████████████████▏              | 379M/611M [00:14<00:24, 9.57MB/s]     62%|████████████████████████▎              | 380M/611M [00:14<00:25, 8.97MB/s]     62%|████████████████████████▎              | 381M/611M [00:14<00:26, 8.74MB/s]     63%|████████████████████████▍              | 382M/611M [00:14<00:26, 8.73MB/s]     63%|████████████████████████▍              | 382M/611M [00:14<00:27, 8.22MB/s]     63%|████████████████████████▌              | 384M/611M [00:14<00:26, 8.58MB/s]     63%|████████████████████████▌              | 385M/611M [00:14<00:24, 9.27MB/s]     63%|████████████████████████▋              | 386M/611M [00:15<00:22, 10.0MB/s]     63%|████████████████████████▋              | 387M/611M [00:15<00:22, 9.82MB/s]     64%|████████████████████████▊              | 388M/611M [00:15<00:21, 10.4MB/s]     64%|████████████████████████▊              | 389M/611M [00:15<00:21, 10.2MB/s]     64%|████████████████████████▉              | 390M/611M [00:15<00:22, 9.85MB/s]     64%|████████████████████████▉              | 391M/611M [00:15<00:22, 9.85MB/s]     64%|█████████████████████████              | 392M/611M [00:15<00:22, 9.60MB/s]     64%|█████████████████████████              | 393M/611M [00:15<00:22, 9.75MB/s]     65%|█████████████████████████▏             | 395M/611M [00:15<00:20, 10.3MB/s]     65%|█████████████████████████▎             | 396M/611M [00:16<00:18, 11.8MB/s]     65%|█████████████████████████▍             | 397M/611M [00:16<00:18, 11.7MB/s]     65%|█████████████████████████▍             | 398M/611M [00:16<00:18, 11.6MB/s]     66%|█████████████████████████▌             | 400M/611M [00:16<00:16, 13.1MB/s]     66%|█████████████████████████▋             | 402M/611M [00:16<00:15, 13.4MB/s]     66%|█████████████████████████▊             | 403M/611M [00:16<00:15, 13.3MB/s]     66%|█████████████████████████▊             | 405M/611M [00:16<00:14, 14.4MB/s]     67%|██████████████████████████▏            | 410M/611M [00:16<00:08, 23.4MB/s]     68%|██████████████████████████▌            | 415M/611M [00:16<00:05, 33.0MB/s]     69%|██████████████████████████▋            | 419M/611M [00:17<00:06, 27.9MB/s]     69%|███████████████████████████            | 424M/611M [00:17<00:05, 35.1MB/s]     70%|███████████████████████████▍           | 430M/611M [00:17<00:04, 41.1MB/s]     71%|███████████████████████████▊           | 435M/611M [00:17<00:03, 45.7MB/s]     72%|████████████████████████████▏          | 441M/611M [00:17<00:03, 48.6MB/s]     73%|████████████████████████████▍          | 446M/611M [00:17<00:03, 44.1MB/s]     74%|████████████████████████████▊          | 452M/611M [00:17<00:03, 47.8MB/s]     75%|█████████████████████████████▏         | 457M/611M [00:17<00:03, 44.8MB/s]     76%|█████████████████████████████▌         | 462M/611M [00:17<00:03, 47.0MB/s]     77%|█████████████████████████████▉         | 468M/611M [00:17<00:02, 49.8MB/s]     78%|██████████████████████████████▎        | 474M/611M [00:18<00:02, 52.0MB/s]     78%|██████████████████████████████▌        | 479M/611M [00:18<00:02, 51.1MB/s]     79%|██████████████████████████████▉        | 484M/611M [00:18<00:02, 52.7MB/s]     80%|███████████████████████████████▎       | 490M/611M [00:18<00:02, 52.6MB/s]     81%|███████████████████████████████▋       | 496M/611M [00:18<00:02, 54.2MB/s]     82%|████████████████████████████████       | 501M/611M [00:18<00:02, 52.0MB/s]     83%|████████████████████████████████▎      | 506M/611M [00:18<00:02, 36.8MB/s]     84%|████████████████████████████████▋      | 512M/611M [00:18<00:02, 41.2MB/s]     85%|█████████████████████████████████      | 518M/611M [00:19<00:02, 44.7MB/s]     86%|█████████████████████████████████▍     | 522M/611M [00:19<00:03, 24.7MB/s]     86%|█████████████████████████████████▌     | 526M/611M [00:19<00:04, 20.6MB/s]     87%|█████████████████████████████████▊     | 529M/611M [00:20<00:04, 18.5MB/s]     87%|█████████████████████████████████▉     | 532M/611M [00:20<00:04, 17.2MB/s]     87%|██████████████████████████████████     | 534M/611M [00:20<00:04, 17.2MB/s]     88%|██████████████████████████████████▎    | 536M/611M [00:20<00:04, 17.3MB/s]     88%|██████████████████████████████████▍    | 538M/611M [00:20<00:04, 16.3MB/s]     89%|██████████████████████████████████▋    | 543M/611M [00:20<00:02, 23.1MB/s]     90%|██████████████████████████████████▉    | 547M/611M [00:20<00:02, 26.9MB/s]     90%|███████████████████████████████████▏   | 550M/611M [00:21<00:02, 21.8MB/s]     91%|███████████████████████████████████▎   | 553M/611M [00:21<00:02, 19.6MB/s]     91%|███████████████████████████████████▍   | 555M/611M [00:21<00:02, 18.8MB/s]     92%|███████████████████████████████████▊   | 561M/611M [00:21<00:01, 26.7MB/s]     93%|████████████████████████████████████▏  | 566M/611M [00:21<00:01, 33.8MB/s]     94%|████████████████████████████████████▌  | 572M/611M [00:21<00:00, 39.5MB/s]     95%|████████████████████████████████████▉  | 578M/611M [00:21<00:00, 44.3MB/s]     95%|█████████████████████████████████████▏ | 582M/611M [00:21<00:00, 33.4MB/s]     96%|█████████████████████████████████████▍ | 586M/611M [00:22<00:01, 21.7MB/s]     97%|█████████████████████████████████████▋ | 589M/611M [00:22<00:01, 17.0MB/s]     97%|█████████████████████████████████████▊ | 592M/611M [00:22<00:01, 15.5MB/s]     97%|█████████████████████████████████████▉ | 594M/611M [00:23<00:01, 13.3MB/s]     98%|██████████████████████████████████████ | 596M/611M [00:23<00:01, 11.8MB/s]     98%|██████████████████████████████████████▏| 597M/611M [00:23<00:01, 11.3MB/s]     98%|██████████████████████████████████████▏| 598M/611M [00:23<00:01, 11.3MB/s]     98%|██████████████████████████████████████▎| 600M/611M [00:23<00:00, 11.5MB/s]     98%|██████████████████████████████████████▍| 601M/611M [00:23<00:00, 11.9MB/s]     99%|██████████████████████████████████████▍| 602M/611M [00:23<00:00, 12.2MB/s]     99%|██████████████████████████████████████▌| 604M/611M [00:23<00:00, 12.3MB/s]     99%|██████████████████████████████████████▋| 605M/611M [00:24<00:00, 11.4MB/s]     99%|██████████████████████████████████████▋| 606M/611M [00:24<00:00, 10.8MB/s]     99%|██████████████████████████████████████▊| 607M/611M [00:24<00:00, 10.6MB/s]    100%|██████████████████████████████████████▊| 608M/611M [00:24<00:00, 9.74MB/s]    100%|██████████████████████████████████████▉| 609M/611M [00:24<00:00, 9.55MB/s]      0%|                                               | 0.00/611M [00:00<?, ?B/s]    100%|████████████████████████████████████████| 611M/611M [00:00<00:00, 941GB/s]
    Attempting to create new mne-python configuration file:
    /github/home/.mne/mne-python.json
    Opening raw data file /github/home/mne_data/MNE-somato-data/sub-01/meg/sub-01_task-somato_meg.fif...
        Range : 237600 ... 506999 =    791.189 ...  1688.266 secs
    Ready.
    Reading 0 ... 269399  =      0.000 ...   897.077 secs...
    Setting up band-stop filter

    FIR filter parameters
    ---------------------
    Designing a one-pass, zero-phase, non-causal bandstop filter:
    - Windowed time-domain design (firwin) method
    - Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation
    - Lower transition bandwidth: 0.50 Hz
    - Upper transition bandwidth: 0.50 Hz
    - Filter length: 1983 samples (6.603 sec)

    Filtering raw data in 1 contiguous segment
    Setting up high-pass filter at 2 Hz

    FIR filter parameters
    ---------------------
    Designing a one-pass, zero-phase, non-causal highpass filter:
    - Windowed time-domain design (firwin) method
    - Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation
    - Lower passband edge: 2.00
    - Lower transition bandwidth: 2.00 Hz (-6 dB cutoff frequency: 1.00 Hz)
    - Filter length: 497 samples (1.655 sec)

    111 events found
    Event IDs: [1]
    Not setting metadata
    Not setting metadata
    111 matching events found
    Setting baseline interval to [-3.9992341833870637, 0.0] sec
    Applying baseline correction (mode: mean)
    0 projection items activated
    Loading data for 111 events and 1202 original time points ...
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
    5 bad epochs dropped
    Computing rank from data with rank=None
        Using tolerance 7.5e-09 (2.2e-16 eps * 204 dim * 1.7e+05  max singular value)
        Estimated rank (grad): 204
        GRAD: rank 204 computed from 204 data channels with 0 projectors
    /github/workspace/alphacsc/datasets/mne_data.py:94: RuntimeWarning: Something went wrong in the data-driven estimation of the data rank as it exceeds the theoretical rank from the info (204 > 64). Consider setting rank to "auto" or setting it explicitly as an integer.
      cov = mne.compute_covariance(epochs_cov)
    Reducing data rank from 204 -> 204
    Estimating covariance using EMPIRICAL
    Done.
    Number of samples used : 127412
    [done]
    Not setting metadata
    Not setting metadata
    111 matching events found
    Setting baseline interval to [-2.001282051803185, 0.0] sec
    Applying baseline correction (mode: mean)
    0 projection items activated
    Loading data for 111 events and 1803 original time points ...
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
    8 bad epochs dropped
    /github/workspace/alphacsc/datasets/mne_data.py:129: DeprecationWarning: events cannot be set directly. This warning will turn into an error after 0.24
      info['events'] = events
    /github/workspace/alphacsc/datasets/mne_data.py:130: DeprecationWarning: Info does not support directly setting the key 'event_id', this warning will turn into an error after 0.24. You can set info['temp'] to store temporary objects in an Info instance, but these will not survive an I/O round-trip.
      info['event_id'] = event_id
    /github/workspace/alphacsc/datasets/mne_data.py:131: DeprecationWarning: Info does not support directly setting the key 'subject', this warning will turn into an error after 0.24. You can set info['temp'] to store temporary objects in an Info instance, but these will not survive an I/O round-trip.
      info['subject'] = dataset
    /github/workspace/alphacsc/datasets/mne_data.py:132: DeprecationWarning: Info does not support directly setting the key 'subjects_dir', this warning will turn into an error after 0.24. You can set info['temp'] to store temporary objects in an Info instance, but these will not survive an I/O round-trip.
      info['subjects_dir'] = subjects_dir
    /github/workspace/alphacsc/datasets/mne_data.py:134: DeprecationWarning: Info does not support directly setting the key 'cov', this warning will turn into an error after 0.24. You can set info['temp'] to store temporary objects in an Info instance, but these will not survive an I/O round-trip.
      info['cov'] = cov
    /github/workspace/alphacsc/datasets/mne_data.py:135: DeprecationWarning: Info does not support directly setting the key 'file_bem', this warning will turn into an error after 0.24. You can set info['temp'] to store temporary objects in an Info instance, but these will not survive an I/O round-trip.
      info['file_bem'] = file_bem
    /github/workspace/alphacsc/datasets/mne_data.py:136: DeprecationWarning: Info does not support directly setting the key 'file_trans', this warning will turn into an error after 0.24. You can set info['temp'] to store temporary objects in an Info instance, but these will not survive an I/O round-trip.
      info['file_trans'] = file_trans




.. GENERATED FROM PYTHON SOURCE LINES 67-68

Fit the model and learn rank1 atoms

.. GENERATED FROM PYTHON SOURCE LINES 68-70

.. code-block:: default

    cdl.fit(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ..............
    [BatchCDL] Converged after 14 iteration, (dz, du) = 8.570e-05, 8.726e-05
    [BatchCDL] Fit in 681.2s

    <alphacsc.convolutional_dictionary_learning.BatchCDL object at 0x7fc2baeb5f10>



.. GENERATED FROM PYTHON SOURCE LINES 71-73

Display the 4-th atom, which displays a :math:`\mu`-waveform in its temporal
pattern.

.. GENERATED FROM PYTHON SOURCE LINES 73-108

.. code-block:: default


    import mne
    import numpy as np
    import matplotlib.pyplot as plt

    i_atom = 4
    n_plots = 3
    figsize = (n_plots * 5, 5.5)
    fig, axes = plt.subplots(1, n_plots, figsize=figsize, squeeze=False)

    # Plot the spatial map of the learn atom using mne topomap
    ax = axes[0, 0]
    u_hat = cdl.u_hat_[i_atom]
    mne.viz.plot_topomap(u_hat, info, axes=ax, show=False)
    ax.set(title='Learned spatial pattern')

    # Plot the temporal pattern of the learn atom
    ax = axes[0, 1]
    v_hat = cdl.v_hat_[i_atom]
    t = np.arange(v_hat.size) / sfreq
    ax.plot(t, v_hat)
    ax.set(xlabel='Time (sec)', title='Learned temporal waveform')
    ax.grid(True)

    # Plot the psd of the time atom
    ax = axes[0, 2]
    psd = np.abs(np.fft.rfft(v_hat)) ** 2
    frequencies = np.linspace(0, sfreq / 2.0, len(psd))
    ax.semilogy(frequencies, psd)
    ax.set(xlabel='Frequencies (Hz)', title='Power Spectral Density')
    ax.grid(True)
    ax.set_xlim(0, 30)

    plt.tight_layout()
    plt.show()



.. image-sg:: /auto_examples/multicsc/images/sphx_glr_plot_somato_mu_waves_001.png
   :alt: Learned spatial pattern, Learned temporal waveform, Power Spectral Density
   :srcset: /auto_examples/multicsc/images/sphx_glr_plot_somato_mu_waves_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /usr/local/lib/python3.9/copy.py:153: DeprecationWarning: Info does not support directly setting the key 'event_id', this warning will turn into an error after 0.24. You can set info['temp'] to store temporary objects in an Info instance, but these will not survive an I/O round-trip.
      y = copier(memo)
    /usr/local/lib/python3.9/copy.py:153: DeprecationWarning: Info does not support directly setting the key 'subject', this warning will turn into an error after 0.24. You can set info['temp'] to store temporary objects in an Info instance, but these will not survive an I/O round-trip.
      y = copier(memo)
    /usr/local/lib/python3.9/copy.py:153: DeprecationWarning: Info does not support directly setting the key 'subjects_dir', this warning will turn into an error after 0.24. You can set info['temp'] to store temporary objects in an Info instance, but these will not survive an I/O round-trip.
      y = copier(memo)
    /usr/local/lib/python3.9/copy.py:153: DeprecationWarning: Info does not support directly setting the key 'cov', this warning will turn into an error after 0.24. You can set info['temp'] to store temporary objects in an Info instance, but these will not survive an I/O round-trip.
      y = copier(memo)
    /usr/local/lib/python3.9/copy.py:153: DeprecationWarning: Info does not support directly setting the key 'file_bem', this warning will turn into an error after 0.24. You can set info['temp'] to store temporary objects in an Info instance, but these will not survive an I/O round-trip.
      y = copier(memo)
    /usr/local/lib/python3.9/copy.py:153: DeprecationWarning: Info does not support directly setting the key 'file_trans', this warning will turn into an error after 0.24. You can set info['temp'] to store temporary objects in an Info instance, but these will not survive an I/O round-trip.
      y = copier(memo)
    /usr/local/lib/python3.9/copy.py:153: DeprecationWarning: Info does not support directly setting the key 'event_id', this warning will turn into an error after 0.24. You can set info['temp'] to store temporary objects in an Info instance, but these will not survive an I/O round-trip.
      y = copier(memo)
    /usr/local/lib/python3.9/copy.py:153: DeprecationWarning: Info does not support directly setting the key 'subject', this warning will turn into an error after 0.24. You can set info['temp'] to store temporary objects in an Info instance, but these will not survive an I/O round-trip.
      y = copier(memo)
    /usr/local/lib/python3.9/copy.py:153: DeprecationWarning: Info does not support directly setting the key 'subjects_dir', this warning will turn into an error after 0.24. You can set info['temp'] to store temporary objects in an Info instance, but these will not survive an I/O round-trip.
      y = copier(memo)
    /usr/local/lib/python3.9/copy.py:153: DeprecationWarning: Info does not support directly setting the key 'cov', this warning will turn into an error after 0.24. You can set info['temp'] to store temporary objects in an Info instance, but these will not survive an I/O round-trip.
      y = copier(memo)
    /usr/local/lib/python3.9/copy.py:153: DeprecationWarning: Info does not support directly setting the key 'file_bem', this warning will turn into an error after 0.24. You can set info['temp'] to store temporary objects in an Info instance, but these will not survive an I/O round-trip.
      y = copier(memo)
    /usr/local/lib/python3.9/copy.py:153: DeprecationWarning: Info does not support directly setting the key 'file_trans', this warning will turn into an error after 0.24. You can set info['temp'] to store temporary objects in an Info instance, but these will not survive an I/O round-trip.
      y = copier(memo)





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 12 minutes  13.346 seconds)


.. _sphx_glr_download_auto_examples_multicsc_plot_somato_mu_waves.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_somato_mu_waves.py <plot_somato_mu_waves.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_somato_mu_waves.ipynb <plot_somato_mu_waves.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

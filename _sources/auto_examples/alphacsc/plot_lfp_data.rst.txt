.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_alphacsc_plot_lfp_data.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_alphacsc_plot_lfp_data.py:


==============================
CSC to learn LFP spiking atoms
==============================

Here, we show how CSC can be used to learn spiking
atoms from Local Field Potential (LFP) data [1].

[1] Hitziger, Sebastian, et al.
    Adaptive Waveform Learning: A Framework for Modeling Variability in
    Neurophysiological Signals. IEEE Transactions on Signal Processing (2017).


First, let us fetch the data (~14 MB)



.. code-block:: python

    import os
    from mne.utils import _fetch_file # noqa

    url = ('https://github.com/hitziger/AWL/raw/master/Experiments/data/'
           'LFP_data_contiguous_1250_Hz.mat')
    fname = './LFP_data_contiguous_1250_Hz.mat'
    if not os.path.exists(fname):
        _fetch_file(url, fname)







It is a mat file, so we use scipy to load it



.. code-block:: python

    from scipy import io # noqa

    data = io.loadmat(fname)
    X, sfreq = data['X'].T, float(data['sfreq'])







And now let us look at the data



.. code-block:: python

    import numpy as np # noqa
    import matplotlib.pyplot as plt # noqa

    start, stop = 11000, 15000
    times = np.arange(start, stop) / sfreq
    plt.plot(times, X[0, start:stop], color='b')
    plt.xlabel('Time (s)')
    plt.ylabel(r'$\mu$ V')
    plt.xlim([9., 12.])




.. image:: /auto_examples/alphacsc/images/sphx_glr_plot_lfp_data_001.png
    :class: sphx-glr-single-img




and filter it using a convenient function from MNE. This will remove low
frequency drifts, but we keep the high frequencies



.. code-block:: python

    from mne.filter import filter_data # noqa
    X = filter_data(X.astype(np.float64), sfreq, l_freq=1, h_freq=None,
                    fir_design='firwin')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Setting up high-pass filter at 1 Hz
    l_trans_bandwidth chosen to be 1.0 Hz
    Filter length of 4125 samples (3.300 sec) selected


Now, we define the parameters of our model.



.. code-block:: python


    reg = 6.0
    n_times = 2500
    n_times_atom = 350
    n_trials = 100
    n_atoms = 3
    n_iter = 60






Let's stick to one random state for now, but if you want to learn how to
select the random state, consult :ref:`this example
<sphx_glr_auto_examples_plot_simulate_randomstate.py>`.



.. code-block:: python

    random_state = 10







Now, we epoch the trials



.. code-block:: python


    overlap = 0
    starts = np.arange(0, X.shape[1] - n_times, n_times - overlap)
    stops = np.arange(n_times, X.shape[1], n_times - overlap)

    X_new = []
    for idx, (start, stop) in enumerate(zip(starts, stops)):
        if idx >= n_trials:
            break
        X_new.append(X[0, start:stop])
    X_new = np.vstack(X_new)
    del X







We remove the mean and scale to unit variance.



.. code-block:: python

    X_new -= np.mean(X_new)
    X_new /= np.std(X_new)







The convolutions can result in edge artifacts at the edges of the trials.
Therefore, we discount the contributions from the edges by windowing the
trials.



.. code-block:: python

    from numpy import hamming # noqa
    X_new *= hamming(n_times)[None, :]







Of course, in a data-limited setting we want to use as much of the data as
possible. If this is the case, you can set `overlap` to non-zero (for example
half the epoch length).

Now, we run regular CSC since the trials are not too noisy



.. code-block:: python

    from alphacsc import learn_d_z # noqa
    pobj, times, d_hat, z_hat = learn_d_z(X_new, n_atoms, n_times_atom, reg=reg,
                                          n_iter=n_iter, random_state=random_state,
                                          n_jobs=1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Coordinate descent loop 0 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 51134.32096508
    Using method dual for projection
    [seed 10] Objective (d) 45299.80903125
    Coordinate descent loop 1 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 26399.47853871
    Using method dual for projection
    [seed 10] Objective (d) 25948.80915409
    Coordinate descent loop 2 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 23777.89064427
    Using method dual for projection
    [seed 10] Objective (d) 23704.90593344
    Coordinate descent loop 3 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 22233.60227587
    Using method dual for projection
    [seed 10] Objective (d) 22221.01870097
    Coordinate descent loop 4 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 21202.43876006
    Using method dual for projection
    [seed 10] Objective (d) 21169.49202496
    Coordinate descent loop 5 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 20579.63611160
    Using method dual for projection
    [seed 10] Objective (d) 20618.98107838
    Coordinate descent loop 6 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 20283.55110757
    Using method dual for projection
    [seed 10] Objective (d) 20210.75292119
    Coordinate descent loop 7 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 19971.53116238
    Using method dual for projection
    [seed 10] Objective (d) 19970.52325693
    Coordinate descent loop 8 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 19708.44554814
    Using method dual for projection
    [seed 10] Objective (d) 19691.20196937
    Coordinate descent loop 9 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 19462.43966049
    Using method dual for projection
    [seed 10] Objective (d) 19467.01239142
    Coordinate descent loop 10 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 19233.45092821
    Using method dual for projection
    [seed 10] Objective (d) 19214.12766228
    Coordinate descent loop 11 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 19085.64469638
    Using method dual for projection
    [seed 10] Objective (d) 19084.13170902
    Coordinate descent loop 12 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18945.61954180
    Using method dual for projection
    [seed 10] Objective (d) 18980.31578131
    Coordinate descent loop 13 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18876.43985522
    Using method dual for projection
    [seed 10] Objective (d) 18836.38353365
    Coordinate descent loop 14 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18720.74584344
    Using method dual for projection
    [seed 10] Objective (d) 18721.54845149
    Coordinate descent loop 15 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18623.64002131
    Using method dual for projection
    [seed 10] Objective (d) 18621.18904484
    Coordinate descent loop 16 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18547.81611676
    Using method dual for projection
    [seed 10] Objective (d) 18545.24281148
    Coordinate descent loop 17 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18471.88752075
    Using method dual for projection
    [seed 10] Objective (d) 18470.42055101
    Coordinate descent loop 18 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18393.84202336
    Using method dual for projection
    [seed 10] Objective (d) 18391.78226334
    Coordinate descent loop 19 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18331.73169084
    Using method dual for projection
    [seed 10] Objective (d) 18328.84451727
    Coordinate descent loop 20 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18274.15271778
    Using method dual for projection
    [seed 10] Objective (d) 18297.40702014
    Coordinate descent loop 21 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18257.44912766
    Using method dual for projection
    [seed 10] Objective (d) 18276.17808984
    Coordinate descent loop 22 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18243.49274441
    Using method dual for projection
    [seed 10] Objective (d) 18261.00618805
    Coordinate descent loop 23 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18234.36110407
    Using method dual for projection
    [seed 10] Objective (d) 18208.94505628
    Coordinate descent loop 24 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18179.04646059
    Using method dual for projection
    [seed 10] Objective (d) 18179.60670435
    Coordinate descent loop 25 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18156.84098633
    Using method dual for projection
    [seed 10] Objective (d) 18166.58627535
    Coordinate descent loop 26 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18145.85002332
    Using method dual for projection
    [seed 10] Objective (d) 18152.93057101
    Coordinate descent loop 27 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18131.29821032
    Using method dual for projection
    [seed 10] Objective (d) 18131.16932362
    Coordinate descent loop 28 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18119.63496373
    Using method dual for projection
    [seed 10] Objective (d) 18111.53150850
    Coordinate descent loop 29 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18095.94337598
    Using method dual for projection
    [seed 10] Objective (d) 18106.50708582
    Coordinate descent loop 30 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18098.05240620
    Using method dual for projection
    [seed 10] Objective (d) 18097.82992343
    Coordinate descent loop 31 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18084.15734809
    Using method dual for projection
    [seed 10] Objective (d) 18025.10057883
    Coordinate descent loop 32 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18015.48731320
    Using method dual for projection
    [seed 10] Objective (d) 18015.15574564
    Coordinate descent loop 33 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18009.09809163
    Using method dual for projection
    [seed 10] Objective (d) 18010.63890542
    Coordinate descent loop 34 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18004.88799023
    Using method dual for projection
    [seed 10] Objective (d) 18058.43305048
    Coordinate descent loop 35 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18049.18841707
    Using method dual for projection
    [seed 10] Objective (d) 17997.43401446
    Coordinate descent loop 36 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17990.54846467
    Using method dual for projection
    [seed 10] Objective (d) 17990.87719259
    Coordinate descent loop 37 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17985.96102599
    Using method dual for projection
    [seed 10] Objective (d) 17988.72471628
    Coordinate descent loop 38 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17984.75057044
    Using method dual for projection
    [seed 10] Objective (d) 18049.41985903
    Coordinate descent loop 39 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 18046.54412269
    Using method dual for projection
    [seed 10] Objective (d) 17984.35902694
    Coordinate descent loop 40 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17980.96972757
    Using method dual for projection
    [seed 10] Objective (d) 17980.80770245
    Coordinate descent loop 41 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17972.69753312
    Using method dual for projection
    [seed 10] Objective (d) 17972.04412269
    Coordinate descent loop 42 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17966.98889595
    Using method dual for projection
    [seed 10] Objective (d) 17966.83389562
    Coordinate descent loop 43 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17962.44373939
    Using method dual for projection
    [seed 10] Objective (d) 17977.55609301
    Coordinate descent loop 44 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17975.06334333
    Using method dual for projection
    [seed 10] Objective (d) 17965.91909413
    Coordinate descent loop 45 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17963.51557159
    Using method dual for projection
    [seed 10] Objective (d) 17978.76528550
    Coordinate descent loop 46 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17976.64782433
    Using method dual for projection
    [seed 10] Objective (d) 17972.77907303
    Coordinate descent loop 47 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17970.86174269
    Using method dual for projection
    [seed 10] Objective (d) 17972.47575814
    Coordinate descent loop 48 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17970.50843842
    Using method dual for projection
    [seed 10] Objective (d) 17964.12393853
    Coordinate descent loop 49 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17961.91502426
    Using method dual for projection
    [seed 10] Objective (d) 17971.95846882
    Coordinate descent loop 50 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17967.98029617
    Using method dual for projection
    [seed 10] Objective (d) 17970.09686134
    Coordinate descent loop 51 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17968.35332098
    Using method dual for projection
    [seed 10] Objective (d) 17962.68647238
    Coordinate descent loop 52 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17960.62676772
    Using method dual for projection
    [seed 10] Objective (d) 17964.09746899
    Coordinate descent loop 53 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17963.10699217
    Using method dual for projection
    [seed 10] Objective (d) 17960.59376126
    Coordinate descent loop 54 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17959.37356324
    Using method dual for projection
    [seed 10] Objective (d) 17954.84100029
    Coordinate descent loop 55 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17953.97372202
    Using method dual for projection
    [seed 10] Objective (d) 17960.88093244
    Coordinate descent loop 56 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17959.65108933
    Using method dual for projection
    [seed 10] Objective (d) 17957.44184535
    Coordinate descent loop 57 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17956.22924010
    Using method dual for projection
    [seed 10] Objective (d) 17955.63062590
    Coordinate descent loop 58 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17954.76010772
    Using method dual for projection
    [seed 10] Objective (d) 17946.56530959
    Coordinate descent loop 59 / 60 [n_jobs=1]
    [seed 10] Objective (z_hat) : 17945.23167260
    Using method dual for projection
    [seed 10] Objective (d) 17944.55864418


Let's look at the atoms now.



.. code-block:: python

    plt.figure()
    plt.plot(d_hat.T)
    plt.show()



.. image:: /auto_examples/alphacsc/images/sphx_glr_plot_lfp_data_002.png
    :class: sphx-glr-single-img




**Total running time of the script:** ( 0 minutes  58.226 seconds)


.. _sphx_glr_download_auto_examples_alphacsc_plot_lfp_data.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_lfp_data.py <plot_lfp_data.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_lfp_data.ipynb <plot_lfp_data.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
